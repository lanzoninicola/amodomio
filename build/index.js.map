{
  "version": 3,
  "sources": ["server-assets-manifest:@remix-run/dev/assets-manifest", "../node_modules/@remix-run/css-bundle/dist/server.js", "<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/components/ui/toast.tsx", "../app/lib/utils.ts", "../app/components/ui/use-toast.ts", "../app/components/ui/toaster.tsx", "../app/routes/admin.categorias.tsx", "../app/components/layout/container/container.tsx", "../app/components/primitives/no-records-found/no-records-found.tsx", "../app/components/primitives/sorting-order-items/sorting-order-items.tsx", "../app/components/ui/button.tsx", "../app/components/ui/input.tsx", "../app/components/primitives/submit-button/submit-button.tsx", "../app/hooks/useFormSubmissionState.ts", "../app/components/ui/fieldset.tsx", "../app/components/ui/label.tsx", "../app/components/ui/switch.tsx", "../app/utils/http-response.server.ts", "../app/lib/firestore-model/src/lib/firestore-client.server.ts", "../app/lib/firestore-model/src/lib/firestore-connection.server.ts", "../app/lib/firestore-model/src/config/get-firebase-config.server.ts", "../app/lib/firestore-model/src/lib/firestore-model.server.ts", "../app/lib/firestore-model/src/lib/firestore-errors.server.ts", "../app/lib/firestore-model/src/utils/error-message.ts", "../app/lib/firestore-model/src/lib/create-firestore-model.server.ts", "../app/domain/category/category.model.server.ts", "../app/domain/base.entity.ts", "../app/domain/category/category.entity.server.ts", "../app/routes/admin.options.tsx", "../app/domain/option/option.model.server.ts", "../app/domain/option/option.entity.server.ts", "../app/routes/admin._index.tsx", "../app/components/ui/select.tsx", "../app/domain/menu-item/menu-item.model.server.ts", "../app/domain/menu-item/menu-item.entity.server.ts", "../app/utils/sort.ts", "../app/utils/url.ts", "../app/components/ui/separator.tsx", "../app/utils/trim.ts", "../app/components/ui/badge.tsx", "../app/routes/cardapio.tsx", "../app/components/primitives/logo/logo.tsx", "../app/components/primitives/tabs/tabs.tsx", "../app/utils/to-lower-case.ts", "../app/domain/category/components/categories-tabs/categories-tabs.tsx", "../app/components/primitives/easter-egg/ester-egg.tsx", "../app/routes/_index.tsx", "../app/routes/admin.tsx", "../app/components/primitives/menu-collapsible/nav-menu-collapsible.tsx", "../app/components/ui/collapsible.tsx", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export default {'entry':{'module':'/build/entry.client-HP7BRL63.js','imports':['/build/_shared/chunk-ICTPDGPD.js','/build/_shared/chunk-RC4FHAB7.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-VFJORIAA.js','imports':['/build/_shared/chunk-JEPZWSME.js','/build/_shared/chunk-M2HZK4KU.js','/build/_shared/chunk-RLNLQQJU.js','/build/_shared/chunk-67AWT524.js','/build/_shared/chunk-NN3RRDZQ.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-UVAFNJKW.js','imports':['/build/_shared/chunk-AWT7AWEP.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin':{'id':'routes/admin','parentId':'root','path':'admin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin-GIBF5OMZ.js','imports':['/build/_shared/chunk-ES7YPPKJ.js','/build/_shared/chunk-LO6MO4SD.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin._index':{'id':'routes/admin._index','parentId':'routes/admin','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/admin._index-4DNVZBZT.js','imports':['/build/_shared/chunk-JEPZWSME.js','/build/_shared/chunk-VUPA73EE.js','/build/_shared/chunk-E75BKMBE.js','/build/_shared/chunk-Z6VKVG6O.js','/build/_shared/chunk-ZZ54CKCB.js','/build/_shared/chunk-MQVPUI7D.js','/build/_shared/chunk-RLNLQQJU.js','/build/_shared/chunk-67AWT524.js','/build/_shared/chunk-NN3RRDZQ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin.categorias':{'id':'routes/admin.categorias','parentId':'routes/admin','path':'categorias','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin.categorias-2HQAX4MW.js','imports':['/build/_shared/chunk-VUPA73EE.js','/build/_shared/chunk-E75BKMBE.js','/build/_shared/chunk-ZZ54CKCB.js','/build/_shared/chunk-MQVPUI7D.js','/build/_shared/chunk-RLNLQQJU.js','/build/_shared/chunk-67AWT524.js','/build/_shared/chunk-NN3RRDZQ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin.options':{'id':'routes/admin.options','parentId':'routes/admin','path':'options','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin.options-2ADJZ72M.js','imports':['/build/_shared/chunk-E75BKMBE.js','/build/_shared/chunk-MQVPUI7D.js','/build/_shared/chunk-67AWT524.js','/build/_shared/chunk-NN3RRDZQ.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/cardapio':{'id':'routes/cardapio','parentId':'root','path':'cardapio','index':undefined,'caseSensitive':undefined,'module':'/build/routes/cardapio-HSOLMX45.js','imports':['/build/_shared/chunk-Z6VKVG6O.js','/build/_shared/chunk-ZZ54CKCB.js','/build/_shared/chunk-MQVPUI7D.js','/build/_shared/chunk-AWT7AWEP.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'version':'a7de6307','hmr':undefined,'url':'/build/manifest-A7DE6307.js'};", "/**\n * @remix-run/css-bundle v1.16.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar assetsManifest = require('@remix-run/dev/assets-manifest');\n\nfunction _interopDefaultLegacy(e) {return e && typeof e === 'object' && 'default' in e ? e : { 'default': e };}\n\nvar assetsManifest__default = /*#__PURE__*/_interopDefaultLegacy(assetsManifest);\n\nconst cssBundleHref = assetsManifest__default[\"default\"].cssBundleHref;\n\nexports.cssBundleHref = cssBundleHref;", "export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { cssBundleHref } from \"@remix-run/css-bundle\";\nimport type { LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration } from\n\"@remix-run/react\";\nimport stylesheet from \"~/tailwind.css\";\nimport { ToastProvider } from \"./components/ui/toast\";\nimport { Toaster } from \"./components/ui/toaster\";\n\nexport const links: LinksFunction = () => [\n...(cssBundleHref ? [{ rel: \"stylesheet\", href: cssBundleHref }] : []),\n{ rel: \"stylesheet\", href: stylesheet }\n// { rel: \"preconnect\", href: \"https://fonts.googleapis.com\" },\n// {\n//   rel: \"preconnect\",\n//   href: \"https://fonts.gstatic.com\",\n// },\n// {\n//   href: \"https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800&family=Homemade+Apple&family=BioRhyme+Expanded:wght@700&display=swap\",\n//   rel: \"stylesheet\",\n// },\n];\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <Toaster />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}\n\n// export function ErrorBoundary({ error }) {\n//   console.error(error);\n//   return (\n//     <html>\n//       <head>\n//         <title>Oh no!</title>\n//         <Meta />\n//         <Links />\n//       </head>\n//       <body>\n//         <div className=\"m-4 p-4 bg-red-300\">\n//           <h1>Oh no!</h1>\n//           <p className=\"text-red-700\">{error?.message || \"Erro generico\"}</p>\n//         </div>\n//         <Scripts />\n//       </body>\n//     </html>\n//   );\n// }", "import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"data-[swipe=move]:transition-none topping relative pointer-events-auto flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full data-[state=closed]:slide-out-to-right-full\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background border\",\n        destructive:\n          \"topping destructive border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n  VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 topping-[.destructive]:border-destructive/30 topping-[.destructive]:hover:border-destructive/30 topping-[.destructive]:hover:bg-destructive topping-[.destructive]:hover:text-destructive-foreground topping-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 topping-hover:opacity-100 topping-[.destructive]:text-red-300 topping-[.destructive]:hover:text-red-50 topping-[.destructive]:focus:ring-red-400 topping-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n", "import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n \nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n", "// Inspired by react-hot-toast library\nimport * as React from \"react\";\n\nimport type { ToastActionElement, ToastProps } from \"@/components/ui/toast\";\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\n\ntype ToasterToast = ToastProps & {\n  id: string;\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  action?: ToastActionElement;\n};\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const;\n\nlet count = 0;\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_VALUE;\n  return count.toString();\n}\n\ntype ActionType = typeof actionTypes;\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"];\n      toast: ToasterToast;\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"];\n      toast: Partial<ToasterToast>;\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    };\n\ninterface State {\n  toasts: ToasterToast[];\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    });\n  }, TOAST_REMOVE_DELAY);\n\n  toastTimeouts.set(toastId, timeout);\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      };\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      };\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action;\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId);\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id);\n        });\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      };\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      };\n  }\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [] };\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach((listener) => {\n    listener(memoryState);\n  });\n}\n\ntype Toast = Omit<ToasterToast, \"id\">;\n\nfunction toast({ ...props }: Toast) {\n  const id = genId();\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    });\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id });\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss();\n      },\n    },\n  });\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  };\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState);\n\n  React.useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  };\n}\n\nexport { useToast, toast };\n", "\"use client\"\n\nimport {\n    Toast,\n    ToastClose,\n    ToastDescription,\n    ToastProvider,\n    ToastTitle,\n    ToastViewport,\n} from \"@/components/ui/toast\"\nimport { useToast } from \"@/components/ui/use-toast\"\n\nexport function Toaster() {\n    const { toasts } = useToast()\n\n    return (\n        <ToastProvider>\n            {toasts.map(function ({ id, title, description, action, ...props }) {\n                return (\n                    <Toast key={id} {...props}>\n                        <div className=\"grid gap-1\">\n                            {title && <ToastTitle>{title}</ToastTitle>}\n                            {description && (\n                                <ToastDescription>{description}</ToastDescription>\n                            )}\n                        </div>\n                        {action}\n                        <ToastClose />\n                    </Toast>\n                )\n            })}\n            <ToastViewport />\n        </ToastProvider>\n    )\n}", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { redirect, type V2_MetaFunction } from \"@remix-run/node\";\nimport { Form, Link, useLoaderData, useSearchParams } from \"@remix-run/react\";\nimport { Edit, Trash } from \"lucide-react\";\nimport Container from \"~/components/layout/container/container\";\nimport NoRecordsFound from \"~/components/primitives/no-records-found/no-records-found\";\nimport SortingOrderItems from \"~/components/primitives/sorting-order-items/sorting-order-items\";\nimport SubmitButton from \"~/components/primitives/submit-button/submit-button\";\nimport { Button } from \"~/components/ui/button\";\nimport Fieldset from \"~/components/ui/fieldset\";\nimport { Input } from \"~/components/ui/input\";\nimport { Label } from \"~/components/ui/label\";\nimport { Switch } from \"~/components/ui/switch\";\nimport { categoryEntity } from \"~/domain/category/category.entity.server\";\nimport type { Category } from \"~/domain/category/category.model.server\";\nimport { ok } from \"~/utils/http-response.server\";\n\nexport const meta: V2_MetaFunction = () => {\n    return [\n        {\n            name: \"robots\",\n            content: \"noindex\",\n        },\n        {\n            name: \"title\",\n            content: \"Categorias | A Modo Mio\",\n        }\n    ];\n};\n\n\nexport async function loader() {\n    const categories = await categoryEntity.findAll()\n    return ok({ categories })\n}\n\nexport async function action({ request }: LoaderArgs) {\n\n    let formData = await request.formData();\n    const { _action, ...values } = Object.fromEntries(formData);\n\n    if (_action === \"category-create\") {\n        const category: Category = {\n            name: values.name as string || \"\",\n            type: \"menu\",\n            visible: values.visible === \"on\" ? true : false,\n            sortOrder: values?.sortOrder ? parseInt(values.sortOrder as string) : 0,\n            default: values.default === \"on\" ? true : false\n        }\n\n        const itemCreated = await categoryEntity.create(category)\n\n        return redirect(`/admin/categorias?_action=category-create&id=${itemCreated.id}`)\n    }\n\n    if (_action === \"category-edit\") {\n\n        const category: Category = {\n            id: values.id as string,\n            name: values.name as string,\n            type: \"menu\",\n            visible: values.visible === \"on\" ? true : false,\n            default: values.default === \"on\" ? true : false\n        }\n\n        await categoryEntity.update(values.id as string, category)\n    }\n\n    if (_action === \"category-delete\") {\n        await categoryEntity.delete(values.id as string)\n        return redirect(`/admin/categorias`)\n    }\n\n    if (_action === \"item-sortorder-up\") {\n        await categoryEntity.sortUp(values.id as string)\n    }\n\n    if (_action === \"item-sortorder-down\") {\n        await categoryEntity.sortDown(values.id as string)\n    }\n\n    return null\n}\n\nexport default function AdminCategories() {\n    const loaderData = useLoaderData<typeof loader>()\n    const categories = loaderData.payload.categories as Category[]\n\n    const categoriesSorted = categories.sort((a, b) => (a?.sortOrder || 0) - (b?.sortOrder || 0))\n\n    const [searchParams, setSearchParams] = useSearchParams()\n    const action = searchParams.get(\"_action\")\n    const itemId = searchParams.get(\"id\")\n\n    const itemToEdit = categories.find(category => category.id === itemId) as Category\n\n\n\n    return (\n        <Container>\n            <div className=\"fixed top-[35px] left-0  w-full p-4 bg-muted z-10\" >\n                <div className=\"flex categories-center justify-between mb-4 items-center\">\n                    <h1 className=\"font-bold text-xl\">Categorias</h1>\n                    <Form method=\"post\">\n                        <SubmitButton actionName=\"category-create\" className=\"w-max\" idleText=\"Criar categoria\" loadingText=\"Criando...\"\n                            disabled={action === \"category-create\" || action === \"category-edit\"}\n                        />\n                    </Form>\n                </div>\n                <div className=\"flex gap-2\">\n                    <Link to=\"?_action=categories-sortorder\" className=\"mr-4\">\n                        <span className=\"text-sm underline\">Ordenamento</span>\n                    </Link>\n                    {action === \"categories-sortorder\" && (\n                        <Link to=\"/admin/categorias\" className=\"mr-4\">\n                            <span className=\"text-sm underline\">Fechar Ordenamento</span>\n                        </Link>\n                    )}\n                </div>\n                {(action === \"category-edit\" || action === \"category-create\") && <CategoryForm category={itemToEdit} action={action} />}\n            </div>\n\n            <div className=\"min-w-[350px]\">\n                {\n                    (action === \"category-edit\" || action === \"category-create\") ? null :\n                        <ul className=\"mt-40\">\n                            {\n                                (!categories || categories.length === 0) ?\n                                    <NoRecordsFound text=\"Nenhum itens no menu\" />\n                                    :\n                                    categoriesSorted.map(category => {\n                                        return (\n                                            <li key={category.id} className=\"mb-4\">\n                                                <CategoryList category={category} />\n                                            </li>\n                                        )\n                                    })\n                            }\n                        </ul>\n                }\n            </div>\n        </Container>\n    )\n}\n\n\ninterface CategoryFormProps {\n    category: Category\n    action: \"category-create\" | \"category-edit\"\n}\n\nfunction CategoryForm({ category, action }: CategoryFormProps) {\n\n    const submitButtonIdleText = action === \"category-edit\" ? \"Atualizar\" : \"Criar\"\n    const submitButtonLoadingText = action === \"category-edit\" ? \"Atualizando...\" : \"Criando...\"\n\n    return (\n\n        <div className=\"p-4 rounded-md border-2 border-muted\">\n            <Form method=\"post\" className=\"\">\n                <div className=\"flex justify-between\">\n                    <div className=\"flex gap-2 mb-4\">\n                        <span className=\"text-xs font-semibold\">Category ID:</span>\n                        <span className=\"text-xs\">{category.id}</span>\n                    </div>\n                    <Link to=\"/admin/categorias\" className=\"text-xs underline\">Voltar</Link>\n                </div>\n                <Fieldset>\n                    <InputItem type=\"hidden\" name=\"id\" defaultValue={category.id} />\n                    <InputItem type=\"text\" name=\"name\" defaultValue={category.name} placeholder=\"Nome categoria\" />\n                </Fieldset>\n                <Fieldset>\n                    <Label htmlFor=\"visible\" className=\"flex gap-2 items-center justify-end\">\n                        Vis\u00EDvel\n                        <Switch id=\"visible\" name=\"visible\" defaultChecked={category.visible} />\n                    </Label>\n                </Fieldset>\n                <Fieldset>\n                    <Label htmlFor=\"default\" className=\"flex gap-2 items-center justify-end\">\n                        Padr\u00E3o\n                        <Switch id=\"default\" name=\"default\" defaultChecked={category.default} />\n                    </Label>\n                </Fieldset>\n                <div className=\"flex gap-4\">\n                    <Button type=\"submit\" variant=\"destructive\" name=\"_action\" value=\"category-delete\" className=\"flex-1\">\n                        <Trash size={16} className=\"mr-2\" />\n                        Excluir\n                    </Button>\n                    <SubmitButton actionName={action} idleText={submitButtonIdleText} loadingText={submitButtonLoadingText} />\n\n                </div>\n            </Form>\n        </div>\n\n    )\n}\n\nfunction InputItem({ ...props }) {\n    return (\n        <Input className=\"text-lg p-2 no-border border-0 placeholder:text-gray-400\" {...props} autoComplete=\"nope\" />\n    )\n}\n\ninterface CategoryListProps {\n    category: Category\n}\n\nfunction CategoryList({ category }: CategoryListProps) {\n    const [searchParams, setSearchParams] = useSearchParams()\n    const action = searchParams.get(\"_action\")\n\n    return (\n        <div className={`border-2 border-muted rounded-lg p-4 flex flex-col gap-2 w-full`}>\n\n            <SortingOrderItems enabled={action === \"categories-sortorder\"} itemId={category.id}>\n                <div className=\"flex justify-between items-center mb-4\">\n                    <h2 className=\"font-lg font-bold tracking-tight\">{category.name}</h2>\n                    <Link to={`?_action=category-edit&id=${category.id}`} >\n                        <Edit size={24} className=\"cursor-pointer\" />\n                    </Link>\n                </div>\n                <div className=\"flex justify-between w-full\">\n                    <span className=\"font-semibold text-sm\">P\u00FAblica no card\u00E1pio</span>\n                    <Switch id=\"visible\" name=\"visible\" defaultChecked={category.visible} disabled />\n                </div>\n            </SortingOrderItems>\n        </div>\n    )\n}\n\n", "\r\n\r\ninterface ContainerProps {\r\n    children: React.ReactNode;\r\n    clazzName?: React.StyleHTMLAttributes<HTMLDivElement>[\"className\"];\r\n}\r\n\r\nexport default function Container({ children, clazzName }: ContainerProps) {\r\n    return <div className={`relative md:max-w-[1024px] left-1/2 -translate-x-1/2 p-4 lg:p-0 ${clazzName}`} data-element=\"container\">\r\n        {children}\r\n    </div>\r\n}\r\n\r\n", "import { Bird } from \"lucide-react\";\n\n\n\ninterface NoRecordsFoundProps {\n    text: string\n    additionalInfo?: string\n    clazzName?: string\n}\n\nexport default function NoRecordsFound({ text, additionalInfo, clazzName, }: NoRecordsFoundProps) {\n    return (\n        <div className={`grid place-items-center m-4 ${clazzName}`}>\n            <div className=\"flex flex-col items-center justify-center gap-4\">\n                <Bird size={64} strokeWidth={\"1px\"} className=\"hover:rotate-6\" />\n                <div className=\"flex flex-col items-center justify-center\">\n                    <h4 className=\"text-xl font-normal text-gray-500\">{text}</h4>\n                    {additionalInfo && <p className=\"text-sm font-normal text-muted-foreground\">{additionalInfo}</p>}\n                </div>\n            </div>\n        </div>\n    )\n}", "import { Form } from \"@remix-run/react\"\nimport { ArrowUp, ArrowDown } from \"lucide-react\"\nimport { Button } from \"~/components/ui/button\"\nimport { Input } from \"~/components/ui/input\"\n\ninterface SortingOrderProps {\n    itemId?: string\n    groupId?: string\n    enabled: boolean\n    children: React.ReactNode\n}\n\nexport default function SortingOrderItems({ enabled, itemId, groupId, children }: SortingOrderProps) {\n\n    if (enabled === false) return <>{children}</>\n\n    return (\n        <div className=\"grid grid-cols-[1fr_.15fr] gap-2\">\n            <div>\n                {children}\n            </div>\n            <Form method=\"post\">\n                <Input type=\"hidden\" name=\"id\" defaultValue={itemId} />\n                <Input type=\"hidden\" name=\"groupId\" defaultValue={groupId} />\n                <div className=\"grid grid-rows-2 gap-2\">\n                    <Button type=\"submit\" variant=\"ghost\" name=\"_action\" value=\"item-sortorder-up\" className=\"w-full\">\n                        <div className=\"bg-muted flex items-center justify-center rounded-md p-2\">\n                            <ArrowUp size={24} className=\"cursor-pointer\" />\n                        </div>\n                    </Button>\n                    <Button type=\"submit\" variant=\"ghost\" name=\"_action\" value=\"item-sortorder-down\" className=\"w-full\">\n                        <div className=\"bg-muted flex items-center justify-center rounded-md p-2\">\n                            <ArrowDown size={24} className=\"cursor-pointer\" />\n                        </div>\n                    </Button>\n                </div>\n            </Form>\n        </div>\n    )\n\n}", "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"underline-offset-4 hover:underline text-primary\",\n      },\n      size: {\n        default: \"h-10 py-2 px-4\",\n        sm: \"h-9 px-3 rounded-md\",\n        lg: \"h-11 px-8 rounded-md\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n", "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n", "import { Loader, Save } from \"lucide-react\";\nimport type { ButtonProps } from \"~/components/ui/button\";\nimport { Button } from \"~/components/ui/button\";\nimport useFormSubmissionnState from \"~/hooks/useFormSubmissionState\";\n\n\ninterface SubmitButtonProps extends ButtonProps {\n    actionName: string,\n    loadingText?: string,\n    idleText?: string,\n    disableLoadingAnimation?: boolean,\n}\n\nexport default function SubmitButton({ actionName, loadingText, idleText, disableLoadingAnimation, ...props }: SubmitButtonProps) {\n\n    const formSubmissionState = useFormSubmissionnState()\n    let formSubmissionInProgress = formSubmissionState === \"submitting\"\n\n    if (disableLoadingAnimation) {\n        formSubmissionInProgress = false\n    }\n\n    let icon = formSubmissionInProgress ? <Loader className=\"text-md\" /> : <Save size={20} strokeWidth=\"1.25px\" />\n    let text = formSubmissionInProgress ? (loadingText || \"Salvando...\") : (idleText || \"Salvar\")\n    let disabled = formSubmissionInProgress || props.disabled\n\n\n    return (\n        <Button type=\"submit\" name=\"_action\" value={actionName} disabled={disabled} {...props} className={`flex gap-2 w-full md:max-w-max md:px-8 ${props.className}  `} >\n            {icon}\n            <span className=\"text-lg lg:text-md\">\n                {text}\n            </span>\n        </Button>\n    )\n\n}", "import { useNavigation } from \"@remix-run/react\";\n\nexport default function useFormSubmissionnState():\n  | \"idle\"\n  | \"submitting\"\n  | \"loading\"\n  | \"submittingOrLoading\" {\n  const navigation = useNavigation();\n\n  if (navigation.state === \"submitting\") {\n    return \"submitting\";\n  }\n\n  if (navigation.state === \"loading\") {\n    return \"loading\";\n  }\n\n  return \"idle\";\n}\n", "import useFormSubmissionnState from \"~/hooks/useFormSubmissionState\";\n\ninterface FieldsetProps {\n    children: React.ReactNode;\n}\n\nexport default function Fieldset({ children }: FieldsetProps) {\n    const formSubmissionState = useFormSubmissionnState()\n    const formSubmissionInProgress = formSubmissionState === \"submitting\"\n\n    return <fieldset className={`grid w-full max-w-sm md:max-w-lg items-center gap-1.5 mb-4 ${formSubmissionInProgress === true && \"opacity-50\"}`}>\n        {children}\n    </fieldset>\n}", "\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n", "\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-[24px] w-[44px] shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n", "import { json } from \"@remix-run/node\";\n\ntype LoaderOrActionReturnType = Record<string, any> | string | undefined;\n\nexport interface HttpResponse {\n  status: number;\n  message?: string;\n  action?: string;\n  payload?: any;\n}\n\nexport function notFound(\n  loaderOrActionReturnData?: LoaderOrActionReturnType,\n  options = { throwIt: false }\n): HttpResponse {\n  const response = formatResponse(\n    { status: 404, fallbackMessage: \"N\u00E3o encontrado\" },\n    loaderOrActionReturnData\n  );\n\n  return doResponse(response, options);\n}\n\nexport function badRequest(\n  loaderOrActionReturnData?: LoaderOrActionReturnType,\n  options = { throwIt: false }\n): HttpResponse | void {\n  const response = formatResponse(\n    { status: 400, fallbackMessage: \"Requisi\u00E7\u00E3o inv\u00E1lida\" },\n    loaderOrActionReturnData\n  );\n\n  return doResponse(response, options);\n}\n\nexport function unauthorized(\n  loaderOrActionReturnData?: LoaderOrActionReturnType,\n  options = { throwIt: false }\n) {\n  const response = formatResponse(\n    { status: 401, fallbackMessage: \"N\u00E3o autorizado\" },\n    loaderOrActionReturnData\n  );\n\n  return doResponse(response, options);\n}\n\nexport function forbidden(\n  loaderOrActionReturnData?: LoaderOrActionReturnType,\n  options = { throwIt: false }\n) {\n  const response = formatResponse(\n    { status: 403, fallbackMessage: \"Requisi\u00E7\u00E3o inv\u00E1lida\" },\n    loaderOrActionReturnData\n  );\n\n  return doResponse(response, options);\n}\n\nexport function serverError(error: Error | any, options = { throwIt: false }) {\n  if (error instanceof Error) {\n    const response = formatResponse(\n      { status: 500, fallbackMessage: \"Erro interno do servidor\" },\n      {\n        message: error.message,\n        payload: error.stack,\n      }\n    );\n\n    return doResponse(response, options);\n  }\n\n  const response = formatResponse(\n    { status: 500, fallbackMessage: \"Erro interno do servidor\" },\n    { message: error }\n  );\n\n  return doResponse(response, options);\n}\n\nexport function ok(loaderOrActionReturnData?: LoaderOrActionReturnType) {\n  const response = formatResponse(\n    { status: 200, fallbackMessage: \"Ok\" },\n    loaderOrActionReturnData\n  );\n\n  return doResponse(response);\n}\n\nexport function created(loaderOrActionReturnData?: LoaderOrActionReturnType) {\n  const response = formatResponse(\n    { status: 201, fallbackMessage: \"Recurso criado\" },\n    loaderOrActionReturnData\n  );\n\n  return doResponse(response);\n}\n\nexport function noContent(loaderOrActionReturnData?: LoaderOrActionReturnType) {\n  const response = formatResponse(\n    { status: 204, fallbackMessage: \"Nenhum conte\u00FAdo\" },\n    loaderOrActionReturnData\n  );\n\n  return doResponse(response);\n}\n\nfunction doResponse(response: HttpResponse, options = { throwIt: false }) {\n  if (options.throwIt) {\n    throw new Error(response.message);\n  }\n\n  return json(response, { status: response.status });\n}\n\nfunction formatResponse(\n  defaultResponse: { status: number; fallbackMessage: string },\n  loaderOrActionReturnData: LoaderOrActionReturnType\n): HttpResponse {\n  // the loader or action returned a string (no payload in the response only a message)\n  if (typeof loaderOrActionReturnData === \"string\") {\n    return {\n      status: defaultResponse.status,\n      message: loaderOrActionReturnData,\n    };\n  }\n\n  // the loader or action returned an object with a message and a payload\n  const response: HttpResponse = {\n    status: defaultResponse.status,\n    message: defaultResponse.fallbackMessage,\n  };\n\n  if (loaderOrActionReturnData?.message) {\n    response.message = loaderOrActionReturnData.message;\n  }\n\n  if (loaderOrActionReturnData?.payload) {\n    response.payload = loaderOrActionReturnData.payload;\n  }\n\n  if (loaderOrActionReturnData?.payload === undefined) {\n    response.payload = loaderOrActionReturnData;\n\n    if (loaderOrActionReturnData?.message) {\n      delete response.payload.message;\n    }\n  }\n\n  // return json(response, { status: response.status });\n  return response;\n}\n", "import type { Firestore } from \"firebase/firestore\";\n\nexport default class FirestoreClient {\n  get connection() {\n    return this._connection;\n  }\n\n  constructor(private _connection: Firestore) {}\n}\n", "import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport getFirebaseConfig from \"../config/get-firebase-config.server\";\n\nlet firebaseConfig = getFirebaseConfig();\n\n// Optional name of the app to initialize\nconst projectName = firebaseConfig.project_id;\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(\n  {\n    projectId: firebaseConfig.project_id,\n  },\n  projectName\n);\n\n// Initialize Cloud Firestore and get a reference to the service\nconst connection = getFirestore(firebaseApp);\n\nexport default connection;\n", "const getFirebaseConfig = () => {\n  // Seems like the only key that is needed is the project_id\n\n  return {\n    // type: process.env.type,\n    project_id: process.env.project_id,\n    // private_key_id: process.env.private_key_id,\n    // private_key: process.env.private_key,\n    // client_email: process.env.client_email,\n    // client_id: process.env.client_id,\n    // auth_uri: process.env.auth_uri,\n    // token_uri: process.env.token_uri,\n    // auth_provider_x509_cert_url: process.env.auth_provider_x509_cert_url,\n    // client_x509_cert_url: process.env.client_x509_cert_url,\n    // universe_domain: process.env.universe_domain,\n  };\n};\n\nexport default getFirebaseConfig;\n", "import type { FieldPath, WhereFilterOp } from \"firebase/firestore\";\nimport {\n  addDoc,\n  collection,\n  deleteDoc,\n  doc,\n  getDoc,\n  getDocs,\n  orderBy,\n  query,\n  updateDoc,\n  where,\n} from \"firebase/firestore\";\nimport { FirestoreDocumentUpdateError } from \"./firestore-errors.server\";\nimport { FirestoreDocumentDeletionError } from \"./firestore-errors.server\";\nimport { FirestoreDocumentCreationError } from \"./firestore-errors.server\";\nimport type FirestoreClient from \"./firestore-client.server\";\n\nimport type { FirestoreDocument } from \"../types\";\nimport errorMessage from \"../utils/error-message\";\n\nexport type whereCompoundCondition = {\n  field: string | FieldPath;\n  op: WhereFilterOp;\n  value: any;\n};\n\nexport type whereCompoundConditions = whereCompoundCondition[];\n\n/**\n * @class FirestoreModel\n * @description A class that provides a base for all Firestore models\n * @param {string} collectionName - The name of the collection\n *\n */\nexport class FirestoreModel<T> {\n  constructor(\n    private _client: FirestoreClient,\n    private _collectionName: string\n  ) {}\n\n  /**\n   * @description Return all documents in a collection\n   *\n   * @returns {object}\n   *\n   * FirestoreCollectionResponse\n   * @example\n   * {\n   *    {\n   *     ok: boolean,\n   *     payload: documentId#1: {...documentData}\n   *     },\n   *    {\n   *     ok: boolean,\n   *     payload: documentId#2: {...documentData}\n   *     },\n   * ...\n   * }\n   */\n  async findAll(): Promise<T[]> {\n    let result: FirestoreDocument[] = [];\n\n    const querySnapshot = await getDocs(\n      collection(this._client.connection, this._collectionName)\n    );\n\n    querySnapshot.forEach((doc) => {\n      const data = { ...doc.data(), id: doc.id };\n\n      result.push(data);\n    });\n\n    return result as T[];\n  }\n\n  /**\n   * @description Return a document by id\n   * If a document is not found, return a FirestoreDocumentNotFound error\n   *\n   * @param {string} documentId\n   * @returns {object} - FirestoreDocumentResponse - {ok: boolean, payload: DocumentData | null, error: any}\n   */\n  async findById(documentId: string): Promise<T | null> {\n    const docRef = doc(\n      this._client.connection,\n      this._collectionName,\n      documentId\n    );\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      return Object.assign(this, { ...docSnap.data(), id: docSnap.id }) as T;\n    }\n\n    return null;\n  }\n\n  /**\n   * @description Add a document to the collection passed as argument\n   * If an error occurs, the error is returned in the payload of the response\n   *\n   * @param {object} data - The document data\n   * @returns {object}\n   *\n   * FirestoreCreationSuccessResponse | FirestoreErrorResponse\n   * - *Success response*: {ok: boolean, payload: DocumentData}\n   * - *Error response*: {ok: false, error: any}\n   */\n  async add(data: { [key: string]: any }): Promise<T> {\n    try {\n      const docRef = await addDoc(\n        collection(this._client.connection, this._collectionName),\n        {\n          ...data,\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString(),\n        }\n      );\n\n      const docSnap = await getDoc(docRef);\n\n      return Object.assign(this, { ...docSnap.data(), id: docRef.id }) as T;\n    } catch (e) {\n      throw new FirestoreDocumentCreationError(errorMessage(e));\n    }\n  }\n\n  /**\n   * @description Update a document by id\n   *\n   * @param {string} documentId - The document id to update\n   * @param {object} updatedData - Data to update\n   * @returns {object}\n   *\n   * FirestoreSuccessResponse | FirestoreErrorResponse\n   * - *Success response*: {ok: boolean}\n   * - *Error response*: {ok: false, error: any}\n   */\n  async update(\n    documentId: string,\n    updatedData: any\n  ): Promise<true | FirestoreDocumentUpdateError> {\n    try {\n      const docRef = doc(\n        this._client.connection,\n        this._collectionName,\n        documentId\n      );\n\n      await updateDoc(docRef, {\n        ...updatedData,\n        updatedAt: new Date().toISOString(),\n      });\n\n      return true;\n    } catch (e) {\n      throw new FirestoreDocumentUpdateError(errorMessage(e));\n    }\n  }\n\n  /**\n   * @description Delete a document by id\n   *\n   * @param {string} documentId - The document id to update\n   * @returns {object}\n   *\n   * FirestoreSuccessResponse | FirestoreErrorResponse\n   * - *Success response*: {ok: boolean}\n   * - *Error response*: {ok: false, error: any}\n   */\n  async delete(\n    documentId: string\n  ): Promise<true | FirestoreDocumentDeletionError> {\n    try {\n      await deleteDoc(\n        doc(this._client.connection, this._collectionName, documentId)\n      );\n      return true;\n    } catch (e) {\n      throw new FirestoreDocumentDeletionError(errorMessage(e));\n    }\n  }\n\n  /**\n   * @description Delete all document in a collection\n   *\n   * @param {string} documentId - The document id to update\n   * @returns {object}\n   *\n   * FirestoreSuccessResponse | FirestoreErrorResponse\n   * - *Success response*: {ok: boolean}\n   * - *Error response*: {ok: false, error: any}\n   */\n  async deleteAll(): Promise<true | FirestoreDocumentDeletionError> {\n    try {\n      const querySnapshot = await getDocs(\n        collection(this._client.connection, this._collectionName)\n      );\n\n      querySnapshot.forEach(async (document) => {\n        await deleteDoc(\n          doc(this._client.connection, this._collectionName, document.id)\n        );\n      });\n\n      return true;\n    } catch (e) {\n      throw new FirestoreDocumentDeletionError(errorMessage(e));\n    }\n  }\n\n  async deleteWhere(\n    conditions: whereCompoundConditions\n  ): Promise<true | FirestoreDocumentDeletionError> {\n    try {\n      const queryFilters = conditions.map((condition) => {\n        return where(condition.field, condition.op, condition.value);\n      });\n\n      const querySnapshot = await getDocs(\n        query(\n          collection(this._client.connection, this._collectionName),\n          ...queryFilters\n        )\n      );\n\n      querySnapshot.forEach(async (document) => {\n        await deleteDoc(\n          doc(this._client.connection, this._collectionName, document.id)\n        );\n      });\n\n      return true;\n    } catch (e) {\n      throw new FirestoreDocumentDeletionError(errorMessage(e));\n    }\n  }\n\n  /**\n   * Return documents that match the query\n   *\n   * @param field  - The field to search\n   * @param operator  - The operator to use\n   * @param value  - The value to search\n   * @returns  - An array of documents\n   */\n  async findWhere(\n    field: string,\n    operator: WhereFilterOp,\n    value: any\n  ): Promise<T[]> {\n    let result: FirestoreDocument[] = [];\n\n    const querySnapshot = await getDocs(\n      query(\n        collection(this._client.connection, this._collectionName),\n        where(field, operator, value)\n      )\n    );\n\n    querySnapshot.forEach((doc) => {\n      const data = { ...doc.data(), id: doc.id };\n\n      result.push(data);\n    });\n\n    return result as T[];\n  }\n\n  async findWhereIn(field: string, values: any[]): Promise<T[] | null> {\n    let result: FirestoreDocument[] = [];\n\n    const querySnapshot = await getDocs(\n      query(\n        collection(this._client.connection, this._collectionName),\n        where(field, \"in\", values)\n      )\n    );\n\n    querySnapshot.forEach((doc) => {\n      const data = { ...doc.data(), id: doc.id };\n\n      result.push(data);\n    });\n\n    return result as T[];\n  }\n\n  /**\n   * Return the first document that match the query\n   *\n   * @param field  - The field to search\n   * @param operator  - The operator to use\n   * @param value  - The value to search\n   * @returns  - An array of documents\n   */\n  async findOne(conditions: whereCompoundConditions): Promise<T | null> {\n    const result = await this.whereCompound(conditions);\n\n    if (result.length === 0) {\n      return null;\n    }\n\n    return result[0] as T;\n  }\n\n  async whereCompound(conditions: whereCompoundConditions): Promise<T[] | []> {\n    let result: FirestoreDocument[] = [];\n\n    const queryFilters = conditions.map((condition) => {\n      return where(condition.field, condition.op, condition.value);\n    });\n\n    const querySnapshot = await getDocs(\n      query(\n        collection(this._client.connection, this._collectionName),\n        ...queryFilters\n      )\n    );\n\n    querySnapshot.forEach((doc) => {\n      const data = { ...doc.data(), id: doc.id };\n\n      result.push(data);\n    });\n\n    return result as T[];\n  }\n\n  async getLatest(): Promise<T> {\n    let result: FirestoreDocument[] = [];\n\n    const querySnapshot = await getDocs(\n      query(\n        collection(this._client.connection, this._collectionName),\n        orderBy(\"createdAt\", \"desc\")\n      )\n    );\n\n    querySnapshot.forEach((doc) => {\n      const data = { ...doc.data(), id: doc.id };\n\n      result.push(data);\n    });\n\n    return result[0] as T;\n  }\n}\n", "export class FirestoreDocumentNotFound extends Error {\n  constructor() {\n    super(\"Document not found\");\n  }\n}\n\nexport class FirestoreDocumentCreationError extends Error {\n  additionalInfo?: string;\n\n  constructor(additionalInfo?: string) {\n    super(`Document not created: ${additionalInfo}`);\n    this.additionalInfo = additionalInfo;\n  }\n}\n\nexport class FirestoreDocumentUpdateError extends Error {\n  additionalInfo?: string;\n\n  constructor(additionalInfo?: string) {\n    super(`Document not updated: ${additionalInfo}`);\n    this.additionalInfo = additionalInfo;\n  }\n}\n\nexport class FirestoreDocumentDeletionError extends Error {\n  additionalInfo?: string;\n\n  constructor(additionalInfo?: string) {\n    super(`Document not deleted: ${additionalInfo}`);\n    this.additionalInfo = additionalInfo;\n  }\n}\n", "export default function errorMessage(error: unknown) {\n  return error instanceof Error ? error[\"message\"] : \"Erro ao adicionar pre\u00E7o\";\n}\n", "import FirestoreClient from \"./firestore-client.server\";\nimport connection from \"./firestore-connection.server\";\nimport { FirestoreModel } from \"./firestore-model.server\";\n\n/**\n * The Firestore model factory, which creates a Firestore model.\n * The shape of model object is determined by the interface given\n * to the generic type T when creating the model.\n *\n * @param collectionName  The name of the collection\n * @returns\n */\nfunction createFirestoreModel<T>(collectionName: string): FirestoreModel<T> {\n  const client = new FirestoreClient(connection);\n\n  return new FirestoreModel<T>(client, collectionName);\n}\n\nexport default createFirestoreModel;\n", "import { createFirestoreModel } from \"~/lib/firestore-model/src\";\n\ninterface Category {\n  id?: string;\n  name: string;\n  type: \"topping\" | \"menu\";\n  sortOrder?: number;\n  visible: boolean;\n  default?: boolean;\n}\n\ninterface CategoryMenu extends Category {\n  type: \"menu\";\n}\n\nconst CategoryModel = createFirestoreModel<Category>(\"categories\");\n\nexport { CategoryModel, type Category, type CategoryMenu };\n", "import type { whereCompoundConditions } from \"~/lib/firestore-model/src\";\nimport type { FirestoreModel } from \"~/lib/firestore-model/src/lib/firestore-model.server\";\n\nexport class BaseEntity<T> {\n  protected model: FirestoreModel<T>;\n\n  constructor(model: FirestoreModel<T>) {\n    this.model = model;\n  }\n\n  async create(record: T): Promise<T> {\n    this.validate(record);\n    return this.save(record);\n  }\n\n  protected async save(record: T): Promise<T> {\n    return await this.model.add(record as { [key: string]: any });\n  }\n\n  async findAll(conditions?: whereCompoundConditions): Promise<T[]> {\n    if (!conditions) {\n      return await this.model.findAll();\n    }\n\n    return await this.model.whereCompound(conditions);\n  }\n\n  async findById(id: string): Promise<T | null> {\n    return await this.model.findById(id);\n  }\n\n  async findOne(conditions: whereCompoundConditions): Promise<T | null> {\n    return await this.model.findOne(conditions);\n  }\n\n  async update(id: string, updatedData: any) {\n    return await this.model.update(id, updatedData);\n  }\n\n  async delete(id: string) {\n    return await this.model.delete(id);\n  }\n\n  async getLatest() {\n    return await this.model.getLatest();\n  }\n\n  protected validate(record: T) {}\n}\n", "import { badRequest, serverError } from \"~/utils/http-response.server\";\nimport type { Category } from \"./category.model.server\";\nimport { CategoryModel } from \"./category.model.server\";\nimport { BaseEntity } from \"../base.entity\";\n\nclass CategoryEntity extends BaseEntity<Category> {\n  override async create(category: Category): Promise<Category> {\n    this.validate(category);\n\n    const latest = await this.getLatest();\n\n    if (latest) {\n      category.sortOrder = (latest?.sortOrder || 0) + 1000;\n    } else {\n      category.sortOrder = 1000;\n    }\n\n    return await super.save(category);\n  }\n\n  async sortDown(id: string): Promise<Category> {\n    const current = await this.findById(id);\n\n    if (!current) {\n      badRequest(\"N\u00E3o foi poss\u00EDvel encontrar a categoria\");\n    }\n\n    const nextValues = await CategoryModel.whereCompound([\n      {\n        field: \"type\",\n        op: \"==\",\n        value: current!.type,\n      },\n\n      {\n        field: \"visible\",\n        op: \"==\",\n        value: true,\n      },\n      {\n        field: \"sortOrder\",\n        op: \">\",\n        value: current!.sortOrder,\n      },\n    ]);\n\n    if (nextValues.length === 0) {\n      return current!;\n    }\n\n    const next = nextValues[0];\n    const nextValueSortOrder = next.sortOrder;\n\n    next.sortOrder = current!.sortOrder;\n    current!.sortOrder = nextValueSortOrder;\n\n    await CategoryModel.update(current!.id as string, {\n      sortOrder: current!.sortOrder,\n    });\n\n    await CategoryModel.update(next!.id as string, {\n      sortOrder: next.sortOrder,\n    });\n\n    return current!;\n  }\n\n  async sortUp(id: string): Promise<Category> {\n    const current = await this.findById(id);\n\n    if (!current) {\n      badRequest(\"Categoria n\u00E3o encontrada\");\n    }\n\n    if (current?.sortOrder === 1000) {\n      return current;\n    }\n\n    const previous = await CategoryModel.whereCompound([\n      {\n        field: \"sortOrder\",\n        op: \"<\",\n        value: current!.sortOrder,\n      },\n      {\n        field: \"type\",\n        op: \"==\",\n        value: current!.type,\n      },\n\n      {\n        field: \"visible\",\n        op: \"==\",\n        value: true,\n      },\n\n      {\n        field: \"sortOrder\",\n        op: \">=\",\n        value: 1000,\n      },\n    ]);\n\n    if (previous.length === 0) {\n      return current!;\n    }\n\n    const previousValue = previous[0];\n\n    const previousSortOrder = previousValue.sortOrder;\n\n    previousValue.sortOrder = current!.sortOrder;\n    current!.sortOrder = previousSortOrder;\n\n    await CategoryModel.update(current!.id as string, {\n      sortOrder: current!.sortOrder,\n    });\n\n    await CategoryModel.update(previousValue!.id as string, {\n      sortOrder: previousValue.sortOrder,\n    });\n\n    return current!;\n  }\n\n  override async delete(id: string) {\n    // TODO: check if category is being used in a catalog\n\n    return await CategoryModel.delete(id);\n  }\n\n  async getDefaultCategory(type: string): Promise<Category | null> {\n    const defaultCategory = await CategoryModel.findOne([\n      {\n        field: \"type\",\n        op: \"==\",\n        value: type,\n      },\n      {\n        field: \"default\",\n        op: \"==\",\n        value: true,\n      },\n    ]);\n\n    return defaultCategory;\n  }\n\n  validate(category: Category): void {\n    if (!category.name) {\n      serverError(\"O nome do cat\u00E1logo \u00E9 obrigat\u00F3rio\");\n    }\n  }\n}\n\nconst categoryEntity = new CategoryEntity(CategoryModel);\n\nexport { categoryEntity };\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { Form } from \"@remix-run/react\";\nimport Container from \"~/components/layout/container/container\";\nimport SubmitButton from \"~/components/primitives/submit-button/submit-button\";\nimport Fieldset from \"~/components/ui/fieldset\";\nimport { Input } from \"~/components/ui/input\";\nimport { Label } from \"~/components/ui/label\";\nimport { optionEntity } from \"~/domain/option/option.entity.server\";\n\n\nexport async function action({ request }: LoaderArgs) {\n\n    let formData = await request.formData();\n    const { _action, ...values } = Object.fromEntries(formData);\n\n    if (_action === \"option-item-create\") {\n\n        const name = values.name as string\n        const value = values.value as string\n\n        await optionEntity.create({ name, value })\n    }\n\n    return null\n}\n\nexport default function OptionsIndex() {\n\n    return (\n\n        <Container>\n            <div className=\"fixed top-[35px] left-0  w-full p-4 bg-muted z-10\" >\n                <div className=\"flex items-center justify-between mb-4\">\n                    <h1 className=\"font-bold text-xl\">Op\u00E7\u00F5es</h1>\n                </div>\n            </div>\n            <div className=\"mt-28\">\n                <Form method=\"post\">\n                    <Fieldset>\n                        <Label htmlFor=\"waNumberForOrders\">Numero WhatsApp para Pedidos</Label>\n                        <Input type=\"hidden\" name=\"name\" value=\"waNumberForOrders\" />\n                        <Input type=\"text\" name=\"value\" id=\"waNumberForOrders\" />\n                    </Fieldset>\n\n                    <SubmitButton actionName=\"option-item-create\">Salvar</SubmitButton>\n                </Form>\n\n            </div>\n\n        </Container>\n\n    )\n\n}", "import { createFirestoreModel } from \"~/lib/firestore-model/src\";\n\nexport interface Option {\n  id?: string;\n  name: string;\n  type?: \"boolean\" | \"string\" | \"number\" | \"array\" | \"object\";\n  value: string;\n}\n\nconst OptionModel = createFirestoreModel<Option>(\"options\");\n\nexport { OptionModel };\n", "import { BaseEntity } from \"../base.entity\";\nimport { OptionModel, type Option } from \"./option.model.server\";\n\nclass OptionEntity extends BaseEntity<Option> {\n  override async create(record: Option): Promise<Option> {\n    await this.validate(record);\n\n    if (typeof record.value === \"boolean\") {\n      record.value = record.value ? \"true\" : \"false\";\n      record.type = \"boolean\";\n    }\n\n    if (Array.isArray(record.value)) {\n      record.value = record.value.join(\",\");\n      record.type = \"array\";\n    }\n\n    // if it is an object, we need to convert it to a string\n    if (typeof record.value === \"object\") {\n      record.value = JSON.stringify(record.value);\n      record.type = \"object\";\n    }\n\n    record.type = record.type || \"string\";\n    record.value = record.value || \"\";\n\n    console.log(record);\n\n    return await super.save(record);\n  }\n}\n\nconst optionEntity = new OptionEntity(OptionModel);\n\nexport { optionEntity };\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { redirect, type V2_MetaFunction } from \"@remix-run/node\";\nimport { Form, Link, useLoaderData, useSearchParams } from \"@remix-run/react\";\nimport { AlertCircle, Edit, Trash } from \"lucide-react\";\nimport { useState } from \"react\";\nimport Container from \"~/components/layout/container/container\";\nimport NoRecordsFound from \"~/components/primitives/no-records-found/no-records-found\";\nimport SubmitButton from \"~/components/primitives/submit-button/submit-button\";\nimport { Button } from \"~/components/ui/button\";\nimport Fieldset from \"~/components/ui/fieldset\";\nimport { Input } from \"~/components/ui/input\";\nimport { Label } from \"~/components/ui/label\";\nimport { Select, SelectContent, SelectGroup, SelectItem, SelectTrigger, SelectValue } from \"~/components/ui/select\";\nimport { Switch } from \"~/components/ui/switch\";\nimport { categoryEntity } from \"~/domain/category/category.entity.server\";\nimport type { Category } from \"~/domain/category/category.model.server\";\nimport type { MenuItem } from \"~/domain/menu-item/menu-item.model.server\";\nimport { menuEntity } from \"~/domain/menu-item/menu-item.entity.server\";\nimport { badRequest, ok } from \"~/utils/http-response.server\";\nimport SortingOrderItems from \"~/components/primitives/sorting-order-items/sorting-order-items\";\nimport sort from \"~/utils/sort\";\nimport { urlAt } from \"~/utils/url\";\nimport { Separator } from \"~/components/ui/separator\";\nimport { CategoriesTabs } from \"~/domain/category/components\";\nimport trim from \"~/utils/trim\";\nimport { Badge } from \"~/components/ui/badge\";\n\nexport const meta: V2_MetaFunction = () => {\n    return [\n        {\n            name: \"robots\",\n            content: \"noindex\",\n        },\n        {\n            name: \"title\",\n            content: \"Administra\u00E7\u00E3o do card\u00E1pio\",\n        }\n    ];\n};\n\ntype MenuWithCreateDate = MenuItem & { createdAt: string }\n\nexport async function loader({ request }: LoaderArgs) {\n    const categories = await categoryEntity.findAll()\n\n    const url = new URL(request.url)\n    const tab = url.searchParams.get('tab')\n    const lastUrlSlug = urlAt(request.url, -1)\n\n    if (!tab && lastUrlSlug === \"admin\") {\n        return redirect(`/admin`)\n    }\n\n    const items = await menuEntity.findAll() as MenuWithCreateDate[]\n\n    // order by created at\n    const sortedItems = sort(items, \"createdAt\", \"desc\")\n\n    return ok({\n        items: sortedItems,\n        categories\n    })\n}\n\nexport async function action({ request }: LoaderArgs) {\n\n    let formData = await request.formData();\n    const { _action, ...values } = Object.fromEntries(formData);\n\n    if (_action === \"menu-item-create\") {\n        const menuItem: MenuItem = {}\n\n        const itemCreated = await menuEntity.create(menuItem)\n\n        return redirect(`/admin?_action=menu-item-edit&id=${itemCreated.id}`)\n    }\n\n    if (_action === \"menu-item-edit\") {\n\n        const name = values.name as string\n        const ingredients = values.ingredients as string\n        const ingredientsIta = values.ingredientsIta as string\n        // const description = values.description as string\n        const price = values.price as string\n        const categoryId = values.categoryId as string\n\n        if (!categoryId) {\n            badRequest(\"Categoria \u00E9 obrigat\u00F3ria\")\n        }\n\n\n\n        const menuItem: MenuItem = {\n            id: values.id as string,\n            category: {\n                id: categoryId\n            },\n            visible: values.visible === \"on\" ? true : false,\n            sortOrder: 9999\n\n        }\n\n        if (name !== \"\") {\n            menuItem.name = name\n        }\n\n        if (ingredients !== \"\") {\n            menuItem.ingredients = ingredients.split(\",\").map(i => trim(i))\n        }\n\n        if (ingredientsIta !== \"\") {\n            menuItem.ingredientsIta = ingredientsIta.split(\",\").map(i => trim(i))\n        }\n\n        if (price !== \"\") {\n            menuItem.price = price\n        }\n\n        // if (description !== \"\") {\n        //     menuItem.description = description\n        // }\n\n        await menuEntity.update(values.id as string, menuItem)\n        return redirect(`/admin`)\n    }\n\n    if (_action === \"menu-item-delete\") {\n        await menuEntity.delete(values.id as string)\n        return redirect(`/admin`)\n    }\n\n    if (_action === \"item-sortorder-up\") {\n        await menuEntity.sortUp(values.id as string, values.groupId as string)\n    }\n\n    if (_action === \"item-sortorder-down\") {\n        await menuEntity.sortDown(values.id as string, values.groupId as string)\n    }\n\n\n    return null\n}\n\nexport type MenuItemActionSearchParam = \"menu-item-create\" | \"menu-item-edit\" | \"menu-item-delete\" | \"menu-items-sortorder\" | null\n\nexport default function AdminCardapio() {\n    const loaderData = useLoaderData<typeof loader>()\n    const items = loaderData.payload.items as MenuItem[]\n    const categories = loaderData.payload.categories as Category[]\n\n    const [searchParams, setSearchParams] = useSearchParams()\n    const action = searchParams.get(\"_action\") as MenuItemActionSearchParam\n\n    const itemId = searchParams.get(\"id\")\n    const itemToEdit = items.find(item => item.id === itemId) as MenuItem\n\n    const itemsFilteredSorted = sort(items, \"sortOrder\", \"asc\")\n\n\n    return (\n        <Container>\n            <div className=\"fixed top-[35px] left-0  w-full p-4 bg-muted z-10\" >\n                <div className=\"flex items-center justify-between mb-4\">\n                    <h1 className=\"font-bold text-xl\">Cardapio</h1>\n                    {(action !== \"menu-item-edit\") &&\n                        (\n                            <Form method=\"post\">\n                                <SubmitButton actionName=\"menu-item-create\" className=\"w-max\" idleText=\"Criar item\" loadingText=\"Criando...\"\n                                    disabled={action === \"menu-item-create\"}\n                                />\n                            </Form>\n                        )\n                    }\n                </div>\n\n                <div className=\"flex gap-2\">\n                    <Link to={`?_action=menu-items-sortorder`} className=\"mr-4\">\n                        <span className=\"text-sm underline\">Ordenamento</span>\n                    </Link>\n                    {action === \"menu-items-sortorder\" && (\n                        <Link to=\"/admin\" className=\"mr-4\">\n                            <span className=\"text-sm underline\">Fechar Ordenamento</span>\n                        </Link>\n                    )}\n                </div>\n                <MenuItemForm item={itemToEdit} action={action} />\n            </div>\n            <div className=\"mt-40 min-w-[350px]\">\n                <div className=\"flex flex-col gap-4\">\n                    <MenuItemListStat items={itemsFilteredSorted} />\n                    <MenuItemList items={itemsFilteredSorted} action={action} />\n                </div>\n            </div>\n\n        </Container>\n    )\n}\n\n\ninterface MenuItemFormProps {\n    categoryId?: string\n    item: MenuItem\n    action: Partial<MenuItemActionSearchParam>\n}\n\nfunction MenuItemForm({ item, action }: MenuItemFormProps) {\n    const loaderData = useLoaderData<typeof loader>()\n    const categories = loaderData.payload.categories as Category[]\n\n    const ingredientsString = item?.ingredients && item.ingredients.join(\", \")\n    const ingredientsItaString = item?.ingredientsIta && item.ingredientsIta.join(\", \")\n\n\n    const submitButtonIdleText = action === \"menu-item-edit\" ? \"Atualizar\" : \"Criar\"\n    const submitButtonLoadingText = action === \"menu-item-edit\" ? \"Atualizando...\" : \"Criando...\"\n\n    if (action !== \"menu-item-edit\" && action !== \"menu-item-create\") return null\n\n    const navigationBackLink = item.category?.id ? `/admin` : \"/admin\"\n\n    return (\n\n        <div className=\"p-4 rounded-md border-2 border-muted\">\n            <Form method=\"post\" className=\"\">\n                <div className=\"flex justify-between items-center\">\n                    <div className=\"flex gap-2 mb-4 items-center\">\n                        <span className=\"text-xs font-semibold\">Pizza ID:</span>\n                        <span className=\"text-xs\">{item.id}</span>\n                    </div>\n                    <Link to={navigationBackLink} className=\"text-xs underline\">\n                        <Button type=\"button\" variant=\"outline\" size=\"sm\" className=\"border-black\">\n                            Voltar\n                        </Button>\n                    </Link>\n                </div>\n                <Fieldset>\n                    <InputItem type=\"hidden\" name=\"id\" defaultValue={item.id} />\n                    <InputItem type=\"text\" name=\"name\" defaultValue={item.name} placeholder=\"Nome pizza\" />\n                </Fieldset>\n                <Fieldset>\n                    <Fieldset>\n                        <div className=\"md:max-w-[150px]\">\n                            <Select name=\"categoryId\" defaultValue={item?.category?.id ?? undefined}>\n                                <SelectTrigger >\n                                    <SelectValue placeholder=\"Categoria\" />\n                                </SelectTrigger>\n                                <SelectContent id=\"categoryId\"   >\n                                    <SelectGroup >\n                                        {categories && categories.map(category => {\n                                            return (\n                                                <SelectItem key={category.id} value={category.id ?? \"\"} className=\"text-lg\">{category.name}</SelectItem>\n                                            )\n                                        })}\n                                    </SelectGroup>\n                                </SelectContent>\n                            </Select>\n                        </div>\n                    </Fieldset>\n                </Fieldset>\n                {/* <Fieldset>\n                    <InputItem type=\"text\" name=\"description\" defaultValue={item.description} placeholder=\"Descri\u00E7\u00E3o\" />\n                </Fieldset> */}\n                <Fieldset>\n                    <InputItem type=\"text\" name=\"price\" defaultValue={item.price} placeholder=\"Pre\u00E7o\" />\n                </Fieldset>\n                <Fieldset>\n                    <InputItem type=\"text\" name=\"ingredients\" defaultValue={ingredientsString} placeholder=\"Ingredientes\" />\n                </Fieldset>\n                <Fieldset>\n                    <InputItem type=\"text\" name=\"ingredientsIta\" defaultValue={ingredientsItaString} placeholder=\"Ingredientes em Italiano\" />\n                </Fieldset>\n\n                <Fieldset>\n                    <Label htmlFor=\"visible\" className=\"flex gap-2 items-center justify-end\">\n                        Vis\u00EDvel\n                        <Switch id=\"visible\" name=\"visible\" defaultChecked={item.visible} />\n                    </Label>\n                </Fieldset>\n                <div className=\"flex gap-4\">\n                    <Button type=\"submit\" variant=\"destructive\" name=\"_action\" value=\"menu-item-delete\" className=\"flex-1\">\n                        <Trash size={16} className=\"mr-2\" />\n                        Excluir\n                    </Button>\n                    <SubmitButton actionName={action} idleText={submitButtonIdleText} loadingText={submitButtonLoadingText} />\n\n                </div>\n            </Form>\n        </div>\n\n    )\n}\n\nfunction InputItem({ ...props }) {\n    return (\n        <Input className=\"text-lg p-2 no-border border-0 placeholder:text-gray-400\" {...props} autoComplete=\"nope\" />\n    )\n}\n\n\ninterface MenuItemListProps {\n    items: MenuItem[]\n    action: Partial<MenuItemActionSearchParam>\n}\n\nfunction MenuItemList({ items, action }: MenuItemListProps) {\n    if (action === \"menu-item-edit\" || action === \"menu-item-create\") return null\n\n    return (\n        <ul className=\"md:grid md:grid-cols-3 gap-4\">\n            {\n                (!items || items.length === 0) ?\n                    <NoRecordsFound text=\"Nenhum itens no menu\" />\n                    :\n                    items.map(item => {\n                        return (\n                            <li key={item.id} className=\"mb-4\">\n                                <MenuItemCard item={item} />\n                            </li>\n                        )\n                    })\n            }\n        </ul>\n    )\n}\n\nfunction MenuItemListStat({ items }: { items: MenuItem[] }) {\n\n    return (\n        <div className=\"flex flex-col gap-2\">\n            <div className=\"grid grid-cols-2\">\n                <div className=\"text-sm font-semibold text-muted-foreground\">Totais pizzas</div>\n                <div className=\"text-sm font-semibold\">{items.length}</div>\n            </div>\n            <div className=\"grid grid-cols-2\">\n                <div className=\"text-sm font-semibold text-muted-foreground\">Pizzas publicadas</div>\n                <div className=\"text-sm font-semibold\">{items.filter(i => i.visible === true).length}</div>\n            </div>\n            <Separator />\n        </div>\n    )\n}\n\n\n\ninterface MenuItemCardProps {\n    item: MenuItem\n}\n\nfunction MenuItemCard({ item }: MenuItemCardProps) {\n    const loaderData = useLoaderData<typeof loader>()\n    const categories = loaderData.payload.categories as Category[]\n\n\n    const [showDetails, setShowDetails] = useState(false)\n\n    const ingredientsString = item?.ingredients ? item.ingredients.join(\", \") : \"Nenhum ingrediente cadastrado\"\n    const ingredientsItaString = item?.ingredientsIta ? item.ingredientsIta.join(\", \") : \"Nenhum ingrediente cadastrado\"\n    const pizzaTitle = item?.name || \"Nenhum nome cadastrado\"\n\n    const pizzaCategory = categories.find(category => category.id === item.category?.id)\n\n    const missingInfo = !item?.name || !item?.price || !item?.ingredients || !item?.ingredientsIta\n\n\n    const [searchParams, setSearchParams] = useSearchParams()\n    const action = searchParams.get(\"_action\")\n\n    return (\n\n        <div className={`border-2 border-muted rounded-lg p-4 flex flex-col gap-2`}>\n            <SortingOrderItems enabled={action === \"menu-items-sortorder\"} itemId={item.id} groupId={pizzaCategory?.id}>\n                <div className=\"flex flex-col gap-4\">\n                    <div className=\"flex justify-between items-center\">\n                        <h2 className=\"text-lg font-bold tracking-tight\">{pizzaTitle}</h2>\n                        <Link to={`?_action=menu-item-edit&id=${item.id}&categoryId=${pizzaCategory?.id}`} >\n                            <span className=\"underline\">Editar</span>\n                        </Link>\n                    </div>\n                    <Badge className=\"w-max\">{pizzaCategory?.name}</Badge>\n                    <div className=\"flex justify-between w-full\">\n                        <span className=\"font-semibold text-sm\">P\u00FAblica no card\u00E1pio</span>\n                        <Switch id=\"visible\" name=\"visible\" defaultChecked={item.visible} disabled />\n                    </div>\n                </div>\n                <div>\n                    {\n                        item?.ingredients && (item?.ingredients.map(\n                            (i, index) => <Badge key={index} className=\"w-max\">{i}</Badge>\n                        ))\n\n                    }\n                </div>\n\n                <div>\n\n                    <span className=\"text-xs underline\" onClick={() => setShowDetails(!showDetails)}>Detalhes</span>\n                    {\n                        showDetails && (\n                            <div className=\"mt-4\">\n                                {/* <p className=\"text-gray-500\">{item.description}</p> */}\n                                <div className=\"flex flex-col mb-2\">\n                                    <span className=\"font-semibold text-sm\">Pre\u00E7o:</span>\n                                    <div className=\"flex gap-2\">\n                                        <span className=\"text-gray-500 text-sm\">R$</span>\n                                        <p className=\"text-gray-500 text-sm\">{item.price}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"flex flex-col gap-2 mb-2\">\n                                    <div className=\"flex flex-col\">\n                                        <span className=\"font-semibold text-sm\">Ingredientes</span>\n                                        <p className=\"text-gray-500 text-sm\">{ingredientsString}</p>\n                                    </div>\n                                    <div className=\"flex flex-col\">\n                                        <span className=\"font-semibold text-sm\">Ingredientes em Italiano</span>\n                                        <p className=\"text-gray-500 text-sm\">{ingredientsItaString}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    }\n                </div>\n\n                {missingInfo && item.visible === true && (\n                    <div className=\"border-2 border-red-500 bg-red-200 rounded-md p-4 mt-4\">\n                        <div className=\"flex gap-2\">\n                            <AlertCircle color=\"red\" />\n                            <div className=\"flex flex-col gap-1\">\n                                {(item?.name === undefined || item.name === \"\") && <span className=\"text-xs font-semibold text-red-500\">Nome n\u00E3o cadastrado</span>}\n                                {(item?.price === undefined || item.price === \"\") && <span className=\"text-xs font-semibold text-red-500\">Pre\u00E7o n\u00E3o cadastrado</span>}\n                                {(item?.ingredients === undefined || item.ingredients.length === 0) && <span className=\"text-xs font-semibold text-red-500\">Ingredientes n\u00E3o cadastrados</span>}\n                                {(item?.ingredientsIta === undefined || item.ingredientsIta.length === 0) && <span className=\"text-xs font-semibold text-red-500\">Ingredientes em Italiano n\u00E3o cadastrados</span>}\n                            </div>\n\n                        </div>\n                    </div>\n                )}\n            </SortingOrderItems>\n        </div>\n\n    )\n}", "\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-transparent px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md animate-in fade-in-80\",\n        position === \"popper\" && \"translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n}\n", "import { createFirestoreModel } from \"~/lib/firestore-model/src\";\n\nexport interface MenuItem {\n  id?: string;\n  name?: string;\n  description?: string;\n  ingredients?: string[];\n  ingredientsIta?: string[];\n  price?: string;\n  visible?: boolean;\n  category?: {\n    id: string;\n  };\n  sortOrder?: number;\n}\n\nconst MenuItemModel = createFirestoreModel<MenuItem>(\"menu_items\");\n\nexport { MenuItemModel };\n", "import { badRequest } from \"~/utils/http-response.server\";\nimport { BaseEntity } from \"../base.entity\";\nimport { MenuItemModel, type MenuItem } from \"./menu-item.model.server\";\nimport { CategoryModel } from \"../category/category.model.server\";\nimport { categoryEntity } from \"../category/category.entity.server\";\n\nclass MenuItemEntity extends BaseEntity<MenuItem> {\n  override async create(menuItem: MenuItem): Promise<MenuItem> {\n    this.validate(menuItem);\n\n    if (!menuItem.category) {\n      badRequest(\"Categoria n\u00E3o informada\");\n    }\n\n    const defaultCategory = await categoryEntity.getDefaultCategory(\"menu\");\n\n    const latest = await this.getLatestByCategory(\n      defaultCategory!.id as string\n    );\n\n    if (latest) {\n      menuItem.sortOrder = (latest?.sortOrder || 0) + 1;\n    } else {\n      menuItem.sortOrder = 1;\n    }\n\n    return await super.save(menuItem);\n  }\n\n  async resetSortOrder(): Promise<void> {\n    const all = await MenuItemModel.whereCompound([\n      {\n        field: \"visible\",\n        op: \"==\",\n        value: true,\n      },\n    ]);\n\n    const ff = all.map(async (item, index) => {\n      const itemCategoryId = item?.category?.id;\n      let itemCategorySortOrder = 1000;\n\n      if (itemCategoryId) {\n        const itemCategory = await CategoryModel.findById(itemCategoryId);\n\n        if (itemCategory) {\n          itemCategorySortOrder = itemCategory.sortOrder || 1000;\n        }\n      }\n\n      return MenuItemModel.update(item.id as string, {\n        sortOrder: itemCategorySortOrder + index + 1,\n      });\n    });\n\n    await Promise.all(ff);\n  }\n\n  async sortDown(id: string, categoryId: string): Promise<MenuItem> {\n    const current = await this.findById(id);\n    const currentCategory = await CategoryModel.findById(categoryId);\n\n    const currentCategorySortOrder = currentCategory?.sortOrder || 1000;\n\n    if (!current) {\n      badRequest(\"Item n\u00E3o encontrado\");\n    }\n\n    if (!current?.sortOrder) {\n      current![\"sortOrder\"] = currentCategorySortOrder + 1;\n    }\n\n    if (!current) {\n      badRequest(\"N\u00E3o foi poss\u00EDvel encontrar a categoria\");\n    }\n\n    const nextValues = await MenuItemModel.whereCompound([\n      // {\n      //   field: \"visible\",\n      //   op: \"==\",\n      //   value: true,\n      // },\n      {\n        field: \"sortOrder\",\n        op: \">\",\n        value: current!.sortOrder,\n      },\n    ]);\n\n    if (nextValues.length === 0) {\n      return current!;\n    }\n\n    const next = nextValues[0];\n    let nextValueSortOrder = next.sortOrder;\n\n    if (!nextValueSortOrder) {\n      nextValueSortOrder = currentCategorySortOrder + 1;\n    }\n\n    next.sortOrder = current!.sortOrder;\n    current!.sortOrder = nextValueSortOrder;\n\n    await MenuItemModel.update(current!.id as string, {\n      sortOrder: current!.sortOrder,\n    });\n\n    await MenuItemModel.update(next!.id as string, {\n      sortOrder: next.sortOrder,\n    });\n\n    return current!;\n  }\n\n  async sortUp(id: string, categoryId: string): Promise<MenuItem> {\n    const current = await this.findById(id);\n    const currentCategory = await CategoryModel.findById(categoryId);\n\n    const currentCategorySortOrder = currentCategory?.sortOrder || 1000;\n\n    if (!current) {\n      badRequest(\"Item n\u00E3o encontrado\");\n    }\n\n    if (!current?.sortOrder) {\n      current![\"sortOrder\"] = currentCategorySortOrder + 1;\n    }\n\n    if (current?.sortOrder === currentCategorySortOrder + 1) {\n      return current;\n    }\n\n    const previous = await MenuItemModel.whereCompound([\n      {\n        field: \"sortOrder\",\n        op: \"<\",\n        value: current!.sortOrder,\n      },\n      // {\n      //   field: \"visible\",\n      //   op: \"==\",\n      //   value: true,\n      // },\n\n      {\n        field: \"sortOrder\",\n        op: \">=\",\n        value: currentCategorySortOrder + 1,\n      },\n    ]);\n\n    if (previous.length === 0) {\n      return current!;\n    }\n\n    const previousValue = previous[0];\n    const previousSortOrder = previousValue.sortOrder;\n\n    if (!previousSortOrder) {\n      previousValue.sortOrder = currentCategorySortOrder + 1;\n    }\n\n    previousValue.sortOrder = current!.sortOrder;\n    current!.sortOrder = previousSortOrder;\n\n    await MenuItemModel.update(current!.id as string, {\n      sortOrder: current!.sortOrder,\n    });\n\n    await MenuItemModel.update(previousValue!.id as string, {\n      sortOrder: previousValue.sortOrder,\n    });\n\n    return current!;\n  }\n\n  async getLatestByCategory(categoryId: string): Promise<MenuItem | null> {\n    const items = await MenuItemModel.whereCompound([\n      {\n        field: \"category.id\",\n        op: \"==\",\n        value: categoryId,\n      },\n      {\n        field: \"visible\",\n        op: \"==\",\n        value: true,\n      },\n    ]);\n\n    if (items.length === 0) {\n      return null;\n    }\n\n    return items[items.length - 1];\n  }\n}\n\nconst menuEntity = new MenuItemEntity(MenuItemModel);\n\nexport { menuEntity };\n", "export default function sort(arr: any[], field: string, order: string = \"asc\") {\n  if (order === \"asc\") {\n    const sorted = arr.sort((a, b) => {\n      if ((a[field] || 0) > (b[field] || 0)) {\n        return 1;\n      }\n      if ((a[field] || 0) < (b[field] || 0)) {\n        return -1;\n      }\n      return 0;\n    });\n\n    return sorted;\n  }\n\n  if (order === \"desc\") {\n    const sorted = arr.sort((a, b) => {\n      if ((a[field] || 0) < (b[field] || 0)) {\n        return -1;\n      }\n      if ((a[field] || 0) > (b[field] || 0)) {\n        return 1;\n      }\n      return 0;\n    });\n\n    return sorted;\n  }\n\n  return arr;\n}\n", "export function urlAt(str: string, index: number) {\n  return str.split(\"/\").at(index);\n}\n\nexport function lastUrlSegment(str: string) {\n  return str.split(\"/\").at(-1);\n}\n\nexport function urlAtOr(str: string, index: number, fallback: string) {\n  return urlAt(str, index) || fallback;\n}\n", "\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n", "export default function trim(str: string) {\n  if (!str) return str;\n\n  if (typeof str !== \"string\") {\n    return str;\n  }\n\n  return str.trim();\n}\n", "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n", "import type { ActionArgs, LinksFunction, LoaderArgs } from \"@remix-run/node\";\nimport { redirect, type V2_MetaFunction } from \"@remix-run/node\";\nimport { useLoaderData, useNavigate, useSearchParams } from \"@remix-run/react\";\n\nimport { ItalianFlagSmall, LogoTransparent } from \"~/components/primitives/logo/logo\";\nimport { ok } from \"~/utils/http-response.server\";\nimport { menuEntity } from \"~/domain/menu-item/menu-item.entity.server\";\nimport type { MenuItem } from \"~/domain/menu-item/menu-item.model.server\";\nimport { useEffect, useState } from \"react\";\nimport { categoryEntity } from \"~/domain/category/category.entity.server\";\nimport type { Category } from \"~/domain/category/category.model.server\";\nimport { CategoriesTabs } from \"~/domain/category/components\";\nimport { urlAt } from \"~/utils/url\";\nimport toLowerCase from \"~/utils/to-lower-case\";\nimport Container from \"~/components/layout/container/container\";\nimport EasterEgg from \"~/components/primitives/easter-egg/ester-egg\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n    { title: \"Card\u00E1pio A Modio Mio\" },\n    {\n      name: \"description\",\n      content: \"Bem vindo ao card\u00E1pio da Pizza Delivery A Modo Mio\",\n    },\n  ];\n};\n\nexport const links: LinksFunction = () => [\n  { rel: \"preconnect\", href: \"https://fonts.googleapis.com\" },\n  {\n    rel: \"preconnect\",\n    href: \"https://fonts.gstatic.com\",\n  },\n  {\n    href: \"https://fonts.googleapis.com/css2?family=BioRhyme+Expanded:wght@700&family=Inconsolata:wght@400;700&display=swap\",\n    rel: \"stylesheet\",\n  },\n];\n\nexport async function loader({ request }: LoaderArgs) {\n  const menuItems = await menuEntity.findAll() as MenuItem[]\n  const categories = await categoryEntity.findAll()\n\n  return ok({\n    items: menuItems.filter(item => item.visible).map(item => item as MenuItem),\n    categories: categories.filter(c => c.visible).map(c => c)\n  })\n}\n\nexport async function action({ request }: ActionArgs) {\n  return null\n}\n\nexport default function MenuPage() {\n  const loaderData = useLoaderData<typeof loader>()\n  const items = loaderData.payload.items as MenuItem[]\n  const categories = loaderData.payload.categories as Category[]\n\n  const [searchParams, setSearchParams] = useSearchParams()\n  const currentCategoryTab = searchParams.get(\"tab\")\n\n  const itemsFiltered = items.filter(item => {\n\n    if (!currentCategoryTab) {\n      const classicCategory = categories.find(c => toLowerCase(c.name) === 'classica')\n      return item.category?.id === classicCategory?.id\n    }\n\n    if (currentCategoryTab) {\n      return item.category?.id === currentCategoryTab\n    }\n    return true\n  })\n\n  return (\n    <div className=\"md:h-screen bg-brand-yellow flex flex-col\">\n      <Container clazzName=\"z-20\">\n        <div className=\"py-6 md:py-12 flex justify-center mb-6 \">\n          <EasterEgg redirectTo=\"/admin\">\n            <LogoTransparent />\n          </EasterEgg>\n        </div>\n        <div>\n          <div className=\"sticky w-full top-2 z-20\">\n            <CategoriesTabs\n              categories={categories}\n              includeAll={false}\n              includeEmpty={false}\n              bgStyle=\"bg-brand-orange\"\n              activeTabStyle=\"font-menu font-bold bg-brand-yellow text-black text-lg\"\n              inactiveTabStyle=\"font-menu font-bold text-white text-lg\" />\n          </div>\n          <div className=\"p-4 md:p-0 overflow-hidden\">\n            <Content items={itemsFiltered} />\n          </div>\n        </div>\n      </Container>\n      <img src=\"/images/pizza-lingui\u00E7a.png\" alt=\"Pizza lingui\u00E7a decorativa\"\n        className=\"fixed top-32 md:top-0 -right-96 -rotate-90 opacity-20 grayscale contrast-100 w-[190%] md:w-auto max-w-none\"\n      />\n    </div >\n\n  );\n}\n\n\nfunction Content({ items }: { items: MenuItem[] }) {\n  return (\n    <div className=\"md:grid md:grid-cols-[1fr_.5fr]\">\n\n      <div className=\"md:pl-40 md:pt-12\">\n        <ul className=\"flex flex-col gap-4 md:grid md:grid-cols-2 md:gap-x-12 mb-4\">\n          {items.map((item, idx) => {\n\n            const ingredientsString = item.ingredients && item.ingredients.join(', ')\n\n            return (\n              <li key={idx} className=\"mb-2\">\n\n                <div className=\"flex- flex-col\">\n                  <PizzaTitle>{item.name}</PizzaTitle>\n                  {item.description && <p>{item.description}</p>}\n                  <p className=\"text-lg font-semibold font-menu leading-tight\">{ingredientsString}</p>\n                  <ItalianIngredientList ingredients={item?.ingredientsIta || []} />\n                  <p>{item.description}</p>\n                  <Price>{item.price}</Price>\n                </div>\n\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n\n    </div>\n  )\n}\n\n\ninterface PizzaTitleProps {\n  children: React.ReactNode\n}\n\nfunction PizzaTitle({ children }: PizzaTitleProps) {\n\n  return (\n    <div className=\"flex gap-1 mb-1 md:mb-0 items-center tracking-tight\">\n      {/* <PizzaIcon /> */}\n      <span className=\"text-base font-bold font-accent uppercase\">{children}</span>\n    </div>\n  )\n}\n\ninterface ItalianIngredientListProps {\n  ingredients: string[]\n}\n\nfunction ItalianIngredientList({ ingredients }: ItalianIngredientListProps) {\n\n  const ingredientsString = ingredients.join(', ')\n\n  return (\n    <div className=\"flex gap-1 items-center\">\n      <div className=\"relative\">\n        <ItalianFlagSmall className=\"absolute top-2 left-0 w-[17px] h-[12px]\" />\n        <span className=\"ml-6 text-base font-light font-menu\">{ingredientsString}</span>\n      </div>\n    </div>\n  )\n\n}\n\n\ninterface PriceProps {\n  children: React.ReactNode\n}\n\nfunction Price({ children }: PriceProps) {\n\n  return (\n    <div className=\"flex gap-1 mt-2\">\n      <span className=\"text-xs font-semibold text-black\">R$</span>\n      <span className=\"text-xs font-semibold text-black\">{children}</span>\n    </div>\n  )\n\n}\n\n\n", "\ninterface LogoProps {\n    w?: number\n    h?: number\n}\n\nexport function LogoTransparent({ w = 80, h = 80 }: LogoProps) {\n\n\n    return (\n        <svg width={`${String(w)}`} height={`${String(w)}`} viewBox={`0 0 ${String(w)} ${String(w)}`} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M18.3439 41.4691C18.2498 41.6304 18.1759 41.7614 18.1222 41.8622C18.0751 41.9562 18.0247 42.0369 17.971 42.1041C17.9239 42.1645 17.8668 42.2216 17.7997 42.2754C17.7392 42.3224 17.6518 42.3829 17.5376 42.4568C17.4637 42.524 17.3898 42.5811 17.3159 42.6281C17.2554 42.6752 17.195 42.7155 17.1345 42.7491C17.0807 42.7827 17.0371 42.7995 17.0035 42.7995C16.99 42.7995 16.9766 42.7961 16.9632 42.7894C16.9497 42.7894 16.9363 42.7894 16.9228 42.7894C16.8825 42.7894 16.8422 42.7894 16.8019 42.7894C16.7683 42.7961 16.7381 42.7726 16.7112 42.7188C16.6911 42.739 16.6743 42.7625 16.6608 42.7894C16.6474 42.8163 16.6339 42.8398 16.6205 42.8599C16.6071 42.8868 16.5869 42.907 16.56 42.9204C16.5399 42.9338 16.5096 42.9338 16.4693 42.9204L16.4189 42.8599L16.2678 42.9909C16.0796 42.8969 15.8982 42.8163 15.7235 42.7491C15.5556 42.6886 15.4044 42.6147 15.27 42.5273C15.1357 42.44 15.0214 42.3291 14.9274 42.1948C14.8333 42.0537 14.7661 41.8622 14.7258 41.6203C14.6922 41.58 14.6553 41.5464 14.6149 41.5195C14.5746 41.4859 14.5276 41.4759 14.4738 41.4893C14.4067 41.6035 14.326 41.7009 14.232 41.7816C14.1379 41.8622 14.0438 41.9495 13.9498 42.0436C13.9162 42.0772 13.8893 42.1141 13.8692 42.1545C13.849 42.1948 13.8221 42.2317 13.7885 42.2653C13.7348 42.3258 13.671 42.3695 13.597 42.3963C13.5231 42.4165 13.4492 42.4366 13.3753 42.4568C13.3014 42.477 13.2309 42.5105 13.1637 42.5576C13.1032 42.6046 13.0595 42.6852 13.0327 42.7995C12.952 42.7524 12.8714 42.739 12.7908 42.7591C12.7303 42.7726 12.6665 42.786 12.5993 42.7995C12.5321 42.8196 12.4649 42.8297 12.3977 42.8297C12.3373 42.8364 12.2768 42.8297 12.2163 42.8095C12.1559 42.7894 12.1021 42.7457 12.0551 42.6785C11.961 42.7188 11.8737 42.7155 11.793 42.6684C11.7124 42.6281 11.6352 42.571 11.5613 42.4971C11.4941 42.4165 11.4269 42.3325 11.3597 42.2452C11.2925 42.1578 11.2287 42.094 11.1682 42.0537C11.1279 41.9462 11.1312 41.8555 11.1783 41.7816C11.2186 41.7009 11.2656 41.627 11.3194 41.5598C11.3664 41.4859 11.4 41.4154 11.4202 41.3482C11.4403 41.2743 11.4101 41.1869 11.3295 41.0862C11.3966 40.9854 11.4571 40.8812 11.5109 40.7737C11.5646 40.6595 11.6184 40.5487 11.6721 40.4412C11.7326 40.3269 11.793 40.2194 11.8535 40.1187C11.9207 40.0112 12.0013 39.9205 12.0954 39.8465C12.0551 39.7995 12.0349 39.7558 12.0349 39.7155C12.0349 39.6685 12.045 39.6248 12.0652 39.5845C12.0853 39.5375 12.1088 39.4938 12.1357 39.4535C12.1626 39.4065 12.1827 39.3628 12.1962 39.3225L12.4884 39.1814L12.4179 38.9395C12.4918 38.9529 12.5456 38.9496 12.5791 38.9294C12.6195 38.9093 12.6463 38.879 12.6598 38.8387C12.6799 38.7984 12.6934 38.7547 12.7001 38.7077C12.7135 38.654 12.7303 38.6069 12.7505 38.5666C12.7841 38.5061 12.8345 38.4625 12.9017 38.4356C13.0427 38.3281 13.1805 38.2139 13.3149 38.0929C13.456 37.972 13.5937 37.8544 13.7281 37.7402C13.8692 37.626 14.0136 37.5185 14.1614 37.4177C14.3092 37.3102 14.4705 37.2195 14.6452 37.1456C14.7661 37.1657 14.8602 37.2027 14.9274 37.2564C15.0013 37.3102 15.055 37.374 15.0886 37.4479C15.1289 37.5218 15.1592 37.6058 15.1793 37.6999C15.1995 37.7872 15.2196 37.8746 15.2398 37.9619C15.2734 38.0761 15.3137 38.1736 15.3607 38.2542C15.4078 38.3348 15.4884 38.402 15.6026 38.4558C15.5085 38.617 15.4716 38.7783 15.4917 38.9395C15.5119 39.094 15.5321 39.2587 15.5522 39.4333C15.5724 39.5946 15.569 39.7525 15.5421 39.907C15.522 40.0615 15.4246 40.1993 15.2499 40.3202C15.2364 40.3673 15.2331 40.4176 15.2398 40.4714C15.2465 40.5251 15.2499 40.5789 15.2499 40.6326C15.2499 40.6864 15.2398 40.7368 15.2196 40.7838C15.1995 40.8308 15.1625 40.8678 15.1088 40.8947C15.1692 40.9686 15.1995 41.0425 15.1995 41.1164C15.2062 41.1903 15.2096 41.2609 15.2096 41.328C15.2163 41.3952 15.2331 41.4557 15.2599 41.5094C15.2935 41.5632 15.3674 41.6035 15.4817 41.6304C15.5018 41.7177 15.5186 41.7849 15.5321 41.8319C15.5522 41.8723 15.5724 41.9059 15.5925 41.9327C15.6194 41.9596 15.653 41.9865 15.6933 42.0134C15.7336 42.0335 15.7874 42.0671 15.8546 42.1141C15.9083 42.1276 15.9688 42.1276 16.036 42.1141C16.1032 42.1007 16.1569 42.1209 16.1972 42.1746C16.2308 42.141 16.2711 42.1242 16.3182 42.1242C16.3652 42.1175 16.4089 42.1175 16.4492 42.1242L16.5802 42.3459C16.6541 42.2922 16.7381 42.2452 16.8321 42.2048C16.9262 42.1645 17.0169 42.1309 17.1043 42.1041C17.205 42.0772 17.3058 42.0537 17.4066 42.0335L18.3439 41.4691ZM14.4738 38.0224C14.4134 38.0761 14.3395 38.1299 14.2521 38.1836C14.1648 38.2374 14.0774 38.2945 13.9901 38.355C13.9095 38.4154 13.8389 38.4826 13.7785 38.5565C13.718 38.6237 13.681 38.7043 13.6676 38.7984C13.5131 38.8253 13.4056 38.8891 13.3451 38.9899C13.2846 39.0907 13.2342 39.2015 13.1939 39.3225C13.1536 39.4434 13.1099 39.5644 13.0629 39.6853C13.0159 39.7995 12.9319 39.8902 12.8109 39.9574C12.7706 39.9843 12.7337 39.9977 12.7001 39.9977C12.7068 39.9977 12.6866 40.0112 12.6396 40.038C12.5657 40.0918 12.5019 40.159 12.4481 40.2396C12.3944 40.3202 12.3474 40.4076 12.307 40.5016C12.2734 40.5957 12.2398 40.6931 12.2063 40.7939C12.1794 40.888 12.1525 40.9753 12.1256 41.0559C12.0316 41.0694 11.961 41.0895 11.914 41.1164C11.867 41.1433 11.8367 41.1735 11.8233 41.2071C11.8166 41.234 11.8199 41.2676 11.8334 41.3079C11.8468 41.3482 11.867 41.3919 11.8938 41.4389C11.9207 41.4792 11.9476 41.5262 11.9745 41.58C12.0081 41.6337 12.0349 41.6875 12.0551 41.7412C12.0752 41.795 12.0853 41.8487 12.0853 41.9025C12.092 41.9562 12.0786 42.0066 12.045 42.0537C12.1391 42.1276 12.2298 42.1444 12.3171 42.1041C12.4045 42.057 12.4851 42.0066 12.559 41.9529C12.5859 41.9327 12.6127 41.9126 12.6396 41.8924C12.6732 41.8655 12.7068 41.8454 12.7404 41.8319C12.8949 41.8655 13.036 41.8555 13.1637 41.8017C13.2913 41.748 13.4089 41.6741 13.5164 41.58C13.6239 41.4859 13.7281 41.3851 13.8288 41.2776C13.9296 41.1701 14.0304 41.0761 14.1312 40.9955L14.0506 40.9148C14.1715 40.8812 14.2555 40.8376 14.3025 40.7838C14.3563 40.7233 14.3899 40.6562 14.4033 40.5823C14.4167 40.5083 14.4167 40.4311 14.4033 40.3505C14.3899 40.2631 14.3798 40.1724 14.3731 40.0783C14.3663 40.0246 14.363 39.9742 14.363 39.9272C14.3697 39.8734 14.3831 39.8197 14.4033 39.7659C14.3496 39.6114 14.3395 39.4636 14.3731 39.3225C14.4134 39.1814 14.4638 39.047 14.5242 38.9194C14.5914 38.785 14.6553 38.6506 14.7157 38.5162C14.7762 38.3818 14.8064 38.2408 14.8064 38.0929L14.4738 38.0224ZM31.331 40.7737C31.2706 40.8275 31.1866 40.898 31.0791 40.9854C30.9783 41.066 30.9111 41.1399 30.8775 41.2071C30.8372 41.2743 30.8036 41.3348 30.7767 41.3885C30.7566 41.4423 30.7297 41.4893 30.6961 41.5296C30.6692 41.5632 30.6289 41.5901 30.5752 41.6102C30.5281 41.6304 30.461 41.6405 30.3736 41.6405C30.3736 41.6606 30.3367 41.7043 30.2627 41.7715C30.1956 41.8319 30.1217 41.8991 30.041 41.973C29.9604 42.0402 29.8865 42.1074 29.8193 42.1746C29.7521 42.2351 29.7185 42.2754 29.7185 42.2955L29.6278 42.2452C29.6144 42.2384 29.5741 42.2418 29.5069 42.2552C29.4464 42.262 29.3725 42.2821 29.2852 42.3157C29.2045 42.3426 29.1239 42.3829 29.0433 42.4366C28.9627 42.4904 28.8988 42.5609 28.8518 42.6483L28.8115 42.6382C28.7107 42.6113 28.6066 42.6046 28.4991 42.618C28.3983 42.6382 28.2975 42.6483 28.1967 42.6483C27.9817 42.6617 27.8238 42.6281 27.723 42.5475C27.6223 42.4736 27.5148 42.3291 27.4005 42.1141C27.3737 42.0671 27.3501 42.0167 27.33 41.963C27.3098 41.9092 27.293 41.8555 27.2796 41.8017V41.7614C27.3737 41.7077 27.4241 41.6371 27.4308 41.5498C27.4375 41.4557 27.4341 41.3583 27.4207 41.2575C27.4073 41.1567 27.3972 41.0593 27.3905 40.9652C27.3905 40.8712 27.4274 40.7939 27.5013 40.7334C27.461 40.6259 27.4644 40.5251 27.5114 40.4311C27.5652 40.3303 27.6155 40.2362 27.6626 40.1489C27.7096 40.0615 27.7331 39.9776 27.7331 39.8969C27.7331 39.8163 27.6592 39.7323 27.5114 39.645C27.3569 39.7055 27.2091 39.7827 27.068 39.8768C26.9336 39.9641 26.7958 40.0582 26.6548 40.159C26.5204 40.253 26.3826 40.3471 26.2415 40.4412C26.1072 40.5352 25.9627 40.6125 25.8082 40.673C25.6671 40.8275 25.5193 40.9619 25.3647 41.0761C25.2102 41.1836 25.059 41.2978 24.9112 41.4187C24.7701 41.5397 24.6391 41.6774 24.5182 41.8319C24.404 41.9798 24.3166 42.1645 24.2561 42.3862C24.2226 42.3459 24.189 42.3191 24.1554 42.3056C24.1218 42.2922 24.0781 42.2787 24.0243 42.2653C23.9504 42.2452 23.8967 42.225 23.8631 42.2048C23.8295 42.178 23.7858 42.141 23.7321 42.094L23.7422 42.0738C23.8026 41.8991 23.8732 41.7211 23.9538 41.5397C24.0344 41.3583 24.0747 41.1769 24.0747 40.9955C24.0747 40.9283 24.068 40.8678 24.0546 40.8141C24.0411 40.7536 24.0344 40.6898 24.0344 40.6226C24.0344 40.5016 24.0546 40.3908 24.0949 40.29C24.1352 40.1892 24.1789 40.0951 24.2259 40.0078C24.2797 39.9205 24.3267 39.8365 24.367 39.7558C24.414 39.6685 24.4376 39.5778 24.4376 39.4837C24.4376 39.4098 24.4208 39.3359 24.3872 39.262C24.3536 39.1881 24.3099 39.1243 24.2561 39.0705C24.1554 39.0638 24.0613 39.0772 23.974 39.1108C23.8866 39.1377 23.7993 39.1713 23.7119 39.2116C23.6246 39.2519 23.5339 39.2889 23.4398 39.3225C23.3457 39.3494 23.245 39.3594 23.1375 39.3527C22.9964 39.4938 22.8519 39.6349 22.7041 39.776C22.5563 39.9104 22.4085 40.0447 22.2607 40.1791C21.9516 40.4546 21.6493 40.7401 21.3536 41.0358C21.0647 41.3314 20.8329 41.6673 20.6582 42.0436C20.6246 42.1175 20.5944 42.1948 20.5675 42.2754C20.5474 42.3493 20.5205 42.4232 20.4869 42.4971C20.4869 42.5105 20.4802 42.524 20.4667 42.5374H20.4164C20.3424 42.5374 20.2921 42.5576 20.2652 42.5979C20.245 42.6382 20.2282 42.6819 20.2148 42.7289C20.2081 42.7827 20.198 42.833 20.1846 42.8801C20.1711 42.9271 20.1409 42.9573 20.0939 42.9708C20.0401 42.9842 19.9897 42.9741 19.9427 42.9405C19.8889 42.907 19.8453 42.8734 19.8117 42.8398L19.8016 42.8297C19.7344 42.7222 19.6974 42.6113 19.6907 42.4971C19.684 42.3829 19.6974 42.272 19.731 42.1645C19.7579 42.0503 19.8016 41.9394 19.8621 41.8319C19.9158 41.7244 19.9696 41.6237 20.0233 41.5296C20.1039 41.3885 20.1778 41.2441 20.245 41.0962C20.3189 40.9417 20.3559 40.7805 20.3559 40.6125C20.3559 40.5386 20.3458 40.4748 20.3257 40.421C20.3122 40.3605 20.2988 40.3001 20.2853 40.2396L20.5071 40.0884C20.4735 40.0414 20.4533 40.0011 20.4466 39.9675C20.4466 39.9272 20.4466 39.8902 20.4466 39.8566C20.4533 39.823 20.4567 39.7928 20.4567 39.7659C20.4634 39.7323 20.46 39.6987 20.4466 39.6651V39.6349L20.5272 39.5442C20.5138 39.3225 20.5071 39.1142 20.5071 38.9194C20.5071 38.7245 20.4667 38.5196 20.3861 38.3046C20.4802 38.2172 20.5709 38.1971 20.6582 38.2441C20.7456 38.2844 20.8329 38.3315 20.9203 38.3852V38.3953L20.9303 38.4054C20.9841 38.486 21.0311 38.5834 21.0714 38.6976C21.1117 38.8119 21.142 38.9328 21.1621 39.0604C21.189 39.1814 21.2092 39.3023 21.2226 39.4233C21.236 39.5442 21.2428 39.6517 21.2428 39.7458C21.2428 39.7726 21.2394 39.7995 21.2327 39.8264C21.2327 39.8465 21.2327 39.8701 21.2327 39.8969L21.1722 39.9574C21.2058 39.991 21.2428 40.0246 21.2831 40.0582C21.3234 40.0918 21.3671 40.1052 21.4141 40.0985C21.4544 39.9776 21.5182 39.9003 21.6056 39.8667C21.6929 39.8264 21.7803 39.7962 21.8676 39.776C21.9617 39.7558 22.0423 39.729 22.1095 39.6954C22.1834 39.6551 22.2204 39.5744 22.2204 39.4535C22.2204 39.4266 22.217 39.4065 22.2103 39.393L22.2304 39.3729C22.4186 39.1847 22.61 39.0168 22.8049 38.869C23.0064 38.7144 23.2147 38.6002 23.4297 38.5263C23.6515 38.4524 23.8799 38.4222 24.1151 38.4356C24.3569 38.449 24.6156 38.5229 24.8911 38.6573L24.9112 38.6674L25.0221 39.0806L24.9515 39.1511C25.0187 39.2452 25.0422 39.3561 25.0221 39.4837C25.0086 39.6047 24.9818 39.7256 24.9415 39.8465C24.9011 39.9675 24.8642 40.0817 24.8306 40.1892C24.797 40.29 24.8004 40.3639 24.8407 40.4109C24.8743 40.458 24.9347 40.4781 25.0221 40.4714C25.1162 40.4647 25.1901 40.458 25.2438 40.4512C25.2976 40.3773 25.3715 40.3135 25.4655 40.2598C25.5663 40.206 25.6637 40.1556 25.7578 40.1086C25.8586 40.0615 25.9459 40.0145 26.0198 39.9675C26.0937 39.9137 26.134 39.8566 26.1408 39.7962C26.2483 39.8163 26.3356 39.813 26.4028 39.7861C26.47 39.7525 26.5237 39.7055 26.5641 39.645C26.6044 39.5845 26.6413 39.5207 26.6749 39.4535C26.7085 39.3796 26.7455 39.3124 26.7858 39.2519C26.8328 39.1847 26.8899 39.1344 26.9571 39.1008C27.0243 39.0672 27.115 39.0571 27.2292 39.0705C27.3837 38.916 27.5652 38.8051 27.7734 38.7379C27.9884 38.664 28.2034 38.6237 28.4184 38.617C28.573 38.6103 28.6805 38.6573 28.7409 38.7581C28.8014 38.8522 28.8316 38.9664 28.8316 39.1008C28.8316 39.2754 28.7913 39.4434 28.7107 39.6047C28.6301 39.7659 28.5394 39.9305 28.4386 40.0985C28.3378 40.2665 28.2471 40.4412 28.1665 40.6226C28.0859 40.804 28.0455 41.0055 28.0455 41.2273C28.0455 41.2474 28.0455 41.2844 28.0455 41.3381C28.0455 41.3851 28.0489 41.4355 28.0556 41.4893C28.0623 41.5363 28.0691 41.5834 28.0758 41.6304C28.0892 41.6707 28.106 41.6976 28.1262 41.711C28.153 41.7244 28.1766 41.7345 28.1967 41.7412L28.1463 41.7816C28.3009 41.8017 28.4386 41.8319 28.5595 41.8723C28.6805 41.9059 28.8115 41.8924 28.9526 41.8319C28.9929 41.8185 29.0332 41.8084 29.0735 41.8017C29.1206 41.795 29.1642 41.7849 29.2045 41.7715C29.265 41.7648 29.302 41.7412 29.3154 41.7009C29.3288 41.6539 29.3524 41.6102 29.3859 41.5699C29.4263 41.5229 29.4867 41.4826 29.5674 41.449C29.6547 41.4087 29.7958 41.3885 29.9906 41.3885V41.2273C30.125 41.1869 30.2392 41.1366 30.3333 41.0761C30.4274 41.0089 30.5181 40.9484 30.6054 40.8947C30.6995 40.8409 30.8003 40.8006 30.9078 40.7737C31.022 40.7469 31.1631 40.7469 31.331 40.7737ZM36.8773 39.3628C36.9041 39.4636 36.8941 39.5509 36.847 39.6248C36.8 39.692 36.7362 39.7525 36.6555 39.8062C36.5816 39.86 36.4977 39.9104 36.4036 39.9574C36.3162 39.9977 36.2423 40.0447 36.1819 40.0985C35.8795 40.1657 35.6041 40.2161 35.3555 40.2497C35.1136 40.2765 34.8448 40.3135 34.5492 40.3605C34.4619 40.374 34.3779 40.374 34.2972 40.3605C34.2233 40.3404 34.1461 40.3337 34.0655 40.3404C34.0184 40.3404 33.9747 40.3404 33.9344 40.3404C33.8941 40.3337 33.8538 40.3337 33.8135 40.3404C33.659 40.3538 33.5582 40.4076 33.5111 40.5016C33.4641 40.589 33.4238 40.6931 33.3902 40.8141C33.3633 40.9283 33.3264 41.0391 33.2794 41.1466C33.239 41.2474 33.1483 41.318 33.0072 41.3583C32.9938 41.3919 32.9972 41.4221 33.0173 41.449C33.0442 41.4759 33.0643 41.4994 33.0778 41.5195C32.9636 41.5531 32.8863 41.6136 32.846 41.7009C32.8124 41.7883 32.7822 41.8756 32.7553 41.963C32.7284 42.0503 32.6881 42.1242 32.6343 42.1847C32.5873 42.2452 32.4933 42.2653 32.3522 42.2452C32.1439 42.4669 31.8986 42.6449 31.6164 42.7793C31.3343 42.9204 31.042 43.0111 30.7396 43.0514C30.6859 43.0245 30.6321 42.9909 30.5784 42.9506C30.5314 42.9103 30.481 42.8734 30.4272 42.8398C30.3802 42.8062 30.3264 42.7793 30.266 42.7591C30.2122 42.7457 30.1484 42.7457 30.0745 42.7591C30.0678 42.618 30.0409 42.487 29.9939 42.3661C29.9401 42.2452 29.8729 42.1309 29.7923 42.0234C29.7789 41.9025 29.7957 41.7916 29.8427 41.6909C29.883 41.5834 29.9267 41.4792 29.9737 41.3784C30.0207 41.2776 30.061 41.1769 30.0946 41.0761C30.1215 40.9686 30.1148 40.8476 30.0745 40.7133C30.1417 40.673 30.1853 40.6259 30.2055 40.5722C30.2324 40.5184 30.2492 40.4647 30.2559 40.4109C30.2693 40.3505 30.2861 40.2967 30.3063 40.2497C30.3264 40.1959 30.3735 40.1522 30.4474 40.1187C30.3936 39.9574 30.4003 39.8398 30.4675 39.7659C30.5414 39.6853 30.6288 39.6147 30.7296 39.5543C30.8304 39.4938 30.9244 39.4266 31.0118 39.3527C31.0991 39.2788 31.1327 39.1679 31.1125 39.0201C31.1529 38.9798 31.1999 38.9462 31.2536 38.9194C31.3074 38.8925 31.3578 38.869 31.4048 38.8488C31.4586 38.8219 31.5089 38.7951 31.556 38.7682C31.603 38.7413 31.6467 38.7043 31.687 38.6573C31.64 38.6237 31.6164 38.5901 31.6164 38.5565C31.6232 38.5229 31.6332 38.4893 31.6467 38.4558C31.6601 38.4154 31.6736 38.3751 31.687 38.3348C31.7072 38.2945 31.7072 38.2542 31.687 38.2139C31.8684 38.2408 32.0263 38.2172 32.1607 38.1433C32.3018 38.0627 32.4328 37.9821 32.5537 37.9015C32.6814 37.8208 32.809 37.7637 32.9367 37.7301C33.0643 37.6965 33.2122 37.7368 33.3801 37.8511C33.3936 37.8981 33.4137 37.9686 33.4406 38.0627C33.4742 38.15 33.5044 38.2408 33.5313 38.3348C33.5649 38.4289 33.5951 38.5196 33.622 38.6069C33.6489 38.6943 33.6657 38.7581 33.6724 38.7984C33.6724 38.832 33.6724 38.8858 33.6724 38.9597C33.6724 39.0336 33.6724 39.1142 33.6724 39.2015C33.6724 39.2822 33.6724 39.3594 33.6724 39.4333C33.6724 39.5072 33.6724 39.5644 33.6724 39.6047C33.8672 39.7189 34.0621 39.7894 34.2569 39.8163C34.4518 39.8365 34.6466 39.7894 34.8415 39.6752C34.9154 39.7424 34.9859 39.7626 35.0531 39.7357C35.1203 39.7021 35.1841 39.6651 35.2446 39.6248C35.3118 39.5845 35.379 39.5644 35.4462 39.5644C35.5134 39.5576 35.5805 39.6114 35.6477 39.7256C35.7418 39.6383 35.8392 39.5845 35.94 39.5644C36.0408 39.5375 36.1449 39.524 36.2524 39.524C36.3599 39.5173 36.4641 39.5072 36.5648 39.4938C36.6723 39.4804 36.7765 39.4367 36.8773 39.3628ZM33.0072 39.5341C33.0072 39.4333 33.024 39.3258 33.0576 39.2116C33.0912 39.0974 33.1181 38.9865 33.1383 38.879C33.1584 38.7648 33.1551 38.6573 33.1282 38.5565C33.108 38.4558 33.0442 38.3651 32.9367 38.2844C32.8628 38.3247 32.8023 38.3818 32.7553 38.4558C32.7083 38.5229 32.6612 38.5935 32.6142 38.6674C32.5672 38.7346 32.51 38.7917 32.4429 38.8387C32.3824 38.8858 32.3018 38.8992 32.201 38.879C32.1674 38.9597 32.1674 39.0269 32.201 39.0806C32.2346 39.1276 32.2749 39.1747 32.3219 39.2217C32.369 39.262 32.4126 39.3057 32.4529 39.3527C32.5 39.3997 32.5168 39.4602 32.5033 39.5341C32.5302 39.5543 32.5672 39.5744 32.6142 39.5946C32.6612 39.608 32.7083 39.6181 32.7553 39.6248C32.809 39.6248 32.8594 39.6181 32.9065 39.6047C32.9535 39.5912 32.9871 39.5677 33.0072 39.5341ZM32.9367 40.3404C32.8023 40.3404 32.6847 40.3101 32.584 40.2497C32.4899 40.1825 32.3925 40.1086 32.2917 40.028C32.1976 39.9473 32.0968 39.8734 31.9893 39.8062C31.8886 39.7323 31.7643 39.6887 31.6164 39.6752C31.556 39.7558 31.4854 39.8331 31.4048 39.907C31.3242 39.9742 31.2536 40.0481 31.1932 40.1287C31.1327 40.2094 31.089 40.2967 31.0621 40.3908C31.042 40.4848 31.0588 40.5923 31.1125 40.7133C30.958 40.7872 30.8539 40.8947 30.8001 41.0358C30.7464 41.1701 30.7094 41.318 30.6893 41.4792C30.6758 41.6405 30.6624 41.8017 30.6489 41.963C30.6355 42.1242 30.5918 42.2687 30.5179 42.3963L30.7396 42.2452C30.7665 42.2586 30.7867 42.2787 30.8001 42.3056C30.8203 42.3325 30.8236 42.3627 30.8102 42.3963C30.8639 42.3426 30.9244 42.3023 30.9916 42.2754C31.0588 42.2418 31.126 42.2183 31.1932 42.2048C31.2671 42.1847 31.3376 42.1679 31.4048 42.1545C31.4787 42.141 31.5493 42.1209 31.6164 42.094C31.7844 42.188 31.9054 42.2082 31.9793 42.1545C32.0532 42.1007 32.1136 42.0201 32.1607 41.9126C32.2077 41.8051 32.2581 41.6942 32.3118 41.58C32.3656 41.4591 32.4529 41.3851 32.5739 41.3583L32.5033 41.2877C32.6175 41.1466 32.7183 41.0022 32.8057 40.8544C32.8997 40.6998 32.9434 40.5285 32.9367 40.3404ZM42.7158 40.3303C42.568 40.6662 42.4336 40.9283 42.3126 41.1164C42.1917 41.2978 42.0573 41.449 41.9095 41.5699C41.7684 41.6909 41.6038 41.8051 41.4157 41.9126C41.2276 42.0134 40.9958 42.1578 40.7203 42.3459C40.6061 42.3527 40.4818 42.3795 40.3474 42.4266C40.213 42.4669 40.0988 42.524 40.0047 42.5979C39.8032 42.5777 39.6184 42.5341 39.4504 42.4669C39.2825 42.3997 39.1246 42.2922 38.9768 42.1444C38.9432 42.1108 38.9129 42.0738 38.8861 42.0335C38.8592 41.9932 38.8289 41.9562 38.7953 41.9227C38.7214 41.8353 38.6744 41.758 38.6543 41.6909C38.6341 41.6237 38.6173 41.5363 38.6039 41.4288C38.577 41.2743 38.5367 41.1634 38.4829 41.0962C38.4292 41.0291 38.325 41.0626 38.1705 41.197L38.0798 41.1164L38.0596 41.1366C37.9992 41.1836 37.9488 41.2239 37.9085 41.2575C37.8749 41.2911 37.8379 41.328 37.7976 41.3684C37.764 41.4019 37.7304 41.4389 37.6968 41.4792C37.6632 41.5195 37.6229 41.5699 37.5759 41.6304C37.4953 41.7312 37.4046 41.8353 37.3038 41.9428C37.2097 42.0503 37.0989 42.1242 36.9712 42.1645C36.951 42.1847 36.9342 42.2048 36.9208 42.225C36.9074 42.2384 36.8839 42.2485 36.8503 42.2552C36.8099 42.2687 36.7629 42.2653 36.7092 42.2452C36.6554 42.225 36.6117 42.1981 36.5781 42.1645C36.5042 42.1645 36.4371 42.1847 36.3766 42.225C36.3228 42.2586 36.2691 42.3056 36.2153 42.3661C36.1683 42.4198 36.1213 42.477 36.0742 42.5374C36.0339 42.5979 35.9869 42.6483 35.9331 42.6886C35.8256 42.6483 35.7249 42.6416 35.6308 42.6684C35.5435 42.6953 35.4561 42.7188 35.3688 42.739C35.2814 42.7659 35.1941 42.7759 35.1067 42.7692C35.0194 42.7692 34.932 42.7188 34.8447 42.618C34.8044 42.4165 34.7708 42.2317 34.7439 42.0637C34.717 41.9227 34.6935 41.7883 34.6734 41.6606C34.6532 41.533 34.6431 41.4557 34.6431 41.4288C34.6767 41.3952 34.6935 41.3516 34.6935 41.2978C34.6868 41.2373 34.6767 41.1869 34.6633 41.1466C34.6499 41.1399 34.6431 41.1332 34.6431 41.1265C34.6431 41.1198 34.6364 41.113 34.623 41.1063C34.6566 41.0794 34.6834 41.0458 34.7036 41.0055C34.717 40.9652 34.7406 40.9316 34.7741 40.9048C34.754 40.851 34.7305 40.7905 34.7036 40.7233C34.6767 40.6562 34.6633 40.589 34.6633 40.5218C34.6834 40.468 34.7036 40.4378 34.7238 40.4311C34.7372 40.4244 34.7741 40.4143 34.8346 40.4008C34.8279 40.3673 34.8212 40.337 34.8145 40.3101C34.801 40.2765 34.7977 40.243 34.8044 40.2094C34.8044 40.1422 34.8212 40.0851 34.8548 40.038C34.8816 39.9843 34.9119 39.9339 34.9455 39.8869C34.9791 39.8331 35.0093 39.776 35.0362 39.7155C35.0631 39.6551 35.0765 39.5845 35.0765 39.5039V39.4535C35.1773 39.4535 35.2445 39.4266 35.2781 39.3729C35.3117 39.3124 35.3318 39.2452 35.3385 39.1713C35.3452 39.0974 35.3486 39.0235 35.3486 38.9496C35.3486 38.8757 35.3688 38.8219 35.4091 38.7883C35.436 38.7615 35.4595 38.7514 35.4796 38.7581C35.5065 38.7581 35.5367 38.7581 35.5703 38.7581C35.6106 38.7111 35.6375 38.6775 35.651 38.6573C35.6644 38.6304 35.661 38.5834 35.6409 38.5162C35.6879 38.5162 35.7249 38.5061 35.7517 38.486C35.7786 38.4658 35.7988 38.439 35.8122 38.4054C35.8324 38.3718 35.8492 38.3382 35.8626 38.3046C35.8828 38.271 35.9063 38.2408 35.9331 38.2139C35.9331 38.0459 35.9768 37.9283 36.0642 37.8611C36.1515 37.794 36.2489 37.7402 36.3564 37.6999C36.4706 37.6529 36.5815 37.5991 36.689 37.5386C36.8032 37.4782 36.8872 37.3707 36.941 37.2161C37.0283 37.2699 37.1022 37.2766 37.1627 37.2363C37.2231 37.1893 37.2803 37.1422 37.334 37.0952C37.3878 37.0414 37.4482 37.0079 37.5154 36.9944C37.5826 36.9743 37.6666 37.0179 37.7674 37.1254C37.8077 36.9978 37.8883 36.9306 38.0092 36.9239C38.1369 36.9172 38.2511 36.944 38.3519 37.0045V37.0146H38.362C38.4695 37.0347 38.5501 37.0885 38.6039 37.1758C38.6576 37.2564 38.7013 37.3505 38.7349 37.458C38.7752 37.5588 38.8155 37.6596 38.8558 37.7604C38.9028 37.8611 38.9667 37.9418 39.0473 38.0022C39.0876 37.8275 39.1246 37.6495 39.1582 37.4681C39.1985 37.2867 39.2623 37.1154 39.3496 36.9541C39.4101 37.028 39.4739 37.0414 39.5411 36.9944L39.5311 36.9743C39.5311 36.8668 39.5512 36.7693 39.5915 36.682C39.6386 36.5946 39.6822 36.5107 39.7225 36.43C39.7696 36.3427 39.7964 36.2553 39.8032 36.168C39.8166 36.0739 39.7864 35.9698 39.7125 35.8556C39.8267 35.822 39.9073 35.7582 39.9543 35.6641C40.0081 35.57 40.0484 35.4693 40.0753 35.3617C40.1089 35.2475 40.1425 35.1333 40.1761 35.0191C40.2164 34.9049 40.2768 34.8074 40.3575 34.7268C40.3575 34.7067 40.3541 34.6865 40.3474 34.6664C40.3474 34.6462 40.3474 34.626 40.3474 34.6059C40.3541 34.5521 40.3743 34.5051 40.4079 34.4648C40.4415 34.4245 40.4784 34.3842 40.5187 34.3439C40.559 34.3035 40.5926 34.2599 40.6195 34.2128C40.6531 34.1591 40.6665 34.0953 40.6598 34.0213C40.727 33.934 40.7875 33.8198 40.8412 33.6787C40.895 33.5309 40.9521 33.3931 41.0125 33.2655C41.073 33.1378 41.1436 33.0438 41.2242 32.9833C41.3048 32.9161 41.409 32.9195 41.5366 32.9934C41.5635 33.074 41.5736 33.1479 41.5669 33.2151C41.5601 33.2756 41.5232 33.3394 41.456 33.4066C41.4963 33.4469 41.5265 33.4805 41.5467 33.5074C41.5265 33.7156 41.4862 33.9239 41.4258 34.1322C41.372 34.3338 41.3183 34.532 41.2645 34.7268C41.2779 34.7403 41.2914 34.7537 41.3048 34.7671C41.3183 34.7806 41.3317 34.794 41.3451 34.8074C41.2309 34.9687 41.1368 35.13 41.0629 35.2912C40.9958 35.4525 40.9353 35.6271 40.8815 35.8153C40.8614 35.8892 40.8412 35.9664 40.8211 36.0471C40.8076 36.1277 40.7875 36.2016 40.7606 36.2688C40.727 36.336 40.6867 36.4099 40.6397 36.4905C40.5926 36.5644 40.5523 36.6383 40.5187 36.7122C40.4448 36.8668 40.3776 37.0247 40.3172 37.1859C40.2634 37.3404 40.2097 37.4983 40.1559 37.6596C40.0887 37.8544 40.0182 38.0459 39.9443 38.234C39.8771 38.4222 39.7931 38.6069 39.6923 38.7883V38.9496C39.6856 39.0235 39.6621 39.0772 39.6218 39.1108C39.5814 39.1377 39.5344 39.1646 39.4807 39.1915C39.4336 39.2116 39.3866 39.2452 39.3396 39.2922C39.2925 39.3326 39.2589 39.4031 39.2388 39.5039V39.514L39.2489 39.524C39.3161 39.6719 39.3295 39.8096 39.2892 39.9372C39.2556 40.0582 39.2153 40.1791 39.1682 40.3001C39.1212 40.4143 39.0876 40.5285 39.0675 40.6427C39.054 40.7569 39.1011 40.8745 39.2086 40.9955C39.2018 41.1298 39.2287 41.2373 39.2892 41.318C39.3496 41.3919 39.4202 41.4557 39.5008 41.5094C39.5814 41.5632 39.6621 41.6136 39.7427 41.6606C39.83 41.7009 39.8939 41.7547 39.9342 41.8219C40.0014 41.7547 40.0719 41.7043 40.1458 41.6707C40.2265 41.6304 40.3037 41.6002 40.3776 41.58C40.4582 41.5598 40.5355 41.543 40.6094 41.5296C40.69 41.5094 40.7673 41.4859 40.8412 41.4591C41.0159 41.412 41.1368 41.3549 41.204 41.2877C41.2712 41.2205 41.3048 41.1769 41.3048 41.1567C41.3115 41.0626 41.3451 41.0022 41.4056 40.9753C41.4728 40.9484 41.5467 40.9316 41.6273 40.9249C41.7147 40.9115 41.7986 40.8947 41.8793 40.8745C41.9666 40.8544 42.0304 40.804 42.0708 40.7233C42.1447 40.7301 42.2085 40.7066 42.2622 40.6528C42.3227 40.5923 42.3765 40.5319 42.4235 40.4714C42.4705 40.4109 42.5176 40.3605 42.5646 40.3202C42.6116 40.2799 42.662 40.2833 42.7158 40.3303ZM38.5736 38.7783C38.4661 38.6976 38.3922 38.6069 38.3519 38.5061C38.3183 38.3986 38.2881 38.2911 38.2612 38.1836C38.241 38.0761 38.2108 37.9754 38.1705 37.8813C38.1369 37.7805 38.0664 37.6965 37.9589 37.6293L37.9387 37.6193C37.932 37.6193 37.895 37.626 37.8278 37.6394C37.7607 37.6529 37.7203 37.6629 37.7069 37.6697C37.7607 37.7167 37.7942 37.757 37.8077 37.7906C37.8211 37.8242 37.8211 37.8578 37.8077 37.8914C37.801 37.925 37.7842 37.9619 37.7573 38.0022C37.7371 38.0358 37.7203 38.0795 37.7069 38.1333C37.6935 38.1467 37.6666 38.1433 37.6263 38.1232C37.586 38.0963 37.5557 38.0761 37.5356 38.0627C37.4415 38.2038 37.3071 38.2979 37.1324 38.3449C36.9645 38.3852 36.8032 38.4255 36.6487 38.4658C36.6621 38.4994 36.6756 38.5297 36.689 38.5565C36.7024 38.5834 36.7159 38.6136 36.7293 38.6472C36.5278 38.7816 36.3799 38.9462 36.2859 39.1411C36.1985 39.3292 36.1179 39.5274 36.044 39.7357C35.9768 39.9372 35.8928 40.1355 35.792 40.3303C35.698 40.5184 35.5502 40.6797 35.3486 40.8141C35.3822 40.8678 35.4057 40.9216 35.4192 40.9753C35.4326 41.0291 35.4763 41.0694 35.5502 41.0962C35.5703 41.1701 35.577 41.2474 35.5703 41.328C35.5703 41.4019 35.5636 41.4759 35.5502 41.5498C35.5367 41.6237 35.5267 41.7009 35.5199 41.7816C35.5199 41.8555 35.53 41.9327 35.5502 42.0134L35.5703 42.0335C35.7786 42.1074 35.9399 42.1141 36.0541 42.0537C36.175 41.9932 36.2792 41.9159 36.3665 41.8219C36.4606 41.7278 36.5613 41.6405 36.6688 41.5598C36.7763 41.4792 36.9275 41.4591 37.1224 41.4994L37.1627 41.4389C37.1492 41.4053 37.1392 41.3751 37.1324 41.3482C37.1257 41.3213 37.1224 41.2911 37.1224 41.2575C37.1291 41.1836 37.1492 41.1265 37.1828 41.0862C37.2164 41.0391 37.2601 40.9887 37.3139 40.935C37.3609 40.8812 37.4046 40.8241 37.4449 40.7637C37.4919 40.7032 37.5356 40.6394 37.5759 40.5722C37.6162 40.5117 37.6632 40.4613 37.717 40.421C37.7707 40.374 37.8413 40.3673 37.9286 40.4008L38.1201 39.6752C38.1268 39.6416 38.1571 39.6114 38.2108 39.5845C38.2713 39.5576 38.3217 39.5274 38.362 39.4938C38.409 39.4602 38.4359 39.4165 38.4426 39.3628C38.456 39.309 38.4191 39.2385 38.3318 39.1511C38.3452 39.1243 38.3553 39.0907 38.362 39.0504C38.3687 39.0101 38.3788 38.9731 38.3922 38.9395C38.4057 38.9059 38.4225 38.879 38.4426 38.8589C38.4628 38.8387 38.4964 38.8354 38.5434 38.8488L38.5736 38.7783ZM47.9496 39.3628C47.9764 39.4636 47.9664 39.5509 47.9193 39.6248C47.8723 39.692 47.8085 39.7525 47.7279 39.8062C47.6539 39.86 47.57 39.9104 47.4759 39.9574C47.3886 39.9977 47.3146 40.0447 47.2542 40.0985C46.9518 40.1657 46.6764 40.2161 46.4278 40.2497C46.1859 40.2765 45.9171 40.3135 45.6215 40.3605C45.5342 40.374 45.4502 40.374 45.3696 40.3605C45.2956 40.3404 45.2184 40.3337 45.1378 40.3404C45.0907 40.3404 45.0471 40.3404 45.0067 40.3404C44.9664 40.3337 44.9261 40.3337 44.8858 40.3404C44.7313 40.3538 44.6305 40.4076 44.5835 40.5016C44.5364 40.589 44.4961 40.6931 44.4625 40.8141C44.4356 40.9283 44.3987 41.0391 44.3517 41.1466C44.3113 41.2474 44.2206 41.318 44.0795 41.3583C44.0661 41.3919 44.0695 41.4221 44.0896 41.449C44.1165 41.4759 44.1367 41.4994 44.1501 41.5195C44.0359 41.5531 43.9586 41.6136 43.9183 41.7009C43.8847 41.7883 43.8545 41.8756 43.8276 41.963C43.8007 42.0503 43.7604 42.1242 43.7067 42.1847C43.6596 42.2452 43.5656 42.2653 43.4245 42.2452C43.2162 42.4669 42.9709 42.6449 42.6888 42.7793C42.4066 42.9204 42.1143 43.0111 41.812 43.0514C41.7582 43.0245 41.7045 42.9909 41.6507 42.9506C41.6037 42.9103 41.5533 42.8734 41.4995 42.8398C41.4525 42.8062 41.3987 42.7793 41.3383 42.7591C41.2845 42.7457 41.2207 42.7457 41.1468 42.7591C41.1401 42.618 41.1132 42.487 41.0662 42.3661C41.0124 42.2452 40.9452 42.1309 40.8646 42.0234C40.8512 41.9025 40.868 41.7916 40.915 41.6909C40.9553 41.5834 40.999 41.4792 41.046 41.3784C41.093 41.2776 41.1334 41.1769 41.1669 41.0761C41.1938 40.9686 41.1871 40.8476 41.1468 40.7133C41.214 40.673 41.2577 40.6259 41.2778 40.5722C41.3047 40.5184 41.3215 40.4647 41.3282 40.4109C41.3416 40.3505 41.3584 40.2967 41.3786 40.2497C41.3987 40.1959 41.4458 40.1522 41.5197 40.1187C41.4659 39.9574 41.4727 39.8398 41.5398 39.7659C41.6137 39.6853 41.7011 39.6147 41.8019 39.5543C41.9027 39.4938 41.9967 39.4266 42.0841 39.3527C42.1714 39.2788 42.205 39.1679 42.1848 39.0201C42.2252 38.9798 42.2722 38.9462 42.3259 38.9194C42.3797 38.8925 42.4301 38.869 42.4771 38.8488C42.5309 38.8219 42.5813 38.7951 42.6283 38.7682C42.6753 38.7413 42.719 38.7043 42.7593 38.6573C42.7123 38.6237 42.6888 38.5901 42.6888 38.5565C42.6955 38.5229 42.7056 38.4893 42.719 38.4558C42.7324 38.4154 42.7459 38.3751 42.7593 38.3348C42.7795 38.2945 42.7795 38.2542 42.7593 38.2139C42.9407 38.2408 43.0986 38.2172 43.233 38.1433C43.3741 38.0627 43.5051 37.9821 43.626 37.9015C43.7537 37.8208 43.8813 37.7637 44.009 37.7301C44.1367 37.6965 44.2845 37.7368 44.4524 37.8511C44.4659 37.8981 44.486 37.9686 44.5129 38.0627C44.5465 38.15 44.5767 38.2408 44.6036 38.3348C44.6372 38.4289 44.6674 38.5196 44.6943 38.6069C44.7212 38.6943 44.738 38.7581 44.7447 38.7984C44.7447 38.832 44.7447 38.8858 44.7447 38.9597C44.7447 39.0336 44.7447 39.1142 44.7447 39.2015C44.7447 39.2822 44.7447 39.3594 44.7447 39.4333C44.7447 39.5072 44.7447 39.5644 44.7447 39.6047C44.9396 39.7189 45.1344 39.7894 45.3292 39.8163C45.5241 39.8365 45.7189 39.7894 45.9138 39.6752C45.9877 39.7424 46.0582 39.7626 46.1254 39.7357C46.1926 39.7021 46.2564 39.6651 46.3169 39.6248C46.3841 39.5845 46.4513 39.5644 46.5185 39.5644C46.5857 39.5576 46.6528 39.6114 46.72 39.7256C46.8141 39.6383 46.9115 39.5845 47.0123 39.5644C47.1131 39.5375 47.2172 39.524 47.3247 39.524C47.4322 39.5173 47.5364 39.5072 47.6371 39.4938C47.7446 39.4804 47.8488 39.4367 47.9496 39.3628ZM44.0795 39.5341C44.0795 39.4333 44.0963 39.3258 44.1299 39.2116C44.1635 39.0974 44.1904 38.9865 44.2106 38.879C44.2307 38.7648 44.2274 38.6573 44.2005 38.5565C44.1803 38.4558 44.1165 38.3651 44.009 38.2844C43.9351 38.3247 43.8746 38.3818 43.8276 38.4558C43.7806 38.5229 43.7335 38.5935 43.6865 38.6674C43.6395 38.7346 43.5824 38.7917 43.5152 38.8387C43.4547 38.8858 43.3741 38.8992 43.2733 38.879C43.2397 38.9597 43.2397 39.0269 43.2733 39.0806C43.3069 39.1276 43.3472 39.1747 43.3942 39.2217C43.4413 39.262 43.4849 39.3057 43.5252 39.3527C43.5723 39.3997 43.5891 39.4602 43.5756 39.5341C43.6025 39.5543 43.6395 39.5744 43.6865 39.5946C43.7335 39.608 43.7806 39.6181 43.8276 39.6248C43.8813 39.6248 43.9317 39.6181 43.9788 39.6047C44.0258 39.5912 44.0594 39.5677 44.0795 39.5341ZM44.009 40.3404C43.8746 40.3404 43.757 40.3101 43.6563 40.2497C43.5622 40.1825 43.4648 40.1086 43.364 40.028C43.2699 39.9473 43.1691 39.8734 43.0616 39.8062C42.9609 39.7323 42.8366 39.6887 42.6888 39.6752C42.6283 39.7558 42.5577 39.8331 42.4771 39.907C42.3965 39.9742 42.3259 40.0481 42.2655 40.1287C42.205 40.2094 42.1613 40.2967 42.1345 40.3908C42.1143 40.4848 42.1311 40.5923 42.1848 40.7133C42.0303 40.7872 41.9262 40.8947 41.8724 41.0358C41.8187 41.1701 41.7817 41.318 41.7616 41.4792C41.7481 41.6405 41.7347 41.8017 41.7212 41.963C41.7078 42.1242 41.6641 42.2687 41.5902 42.3963L41.812 42.2452C41.8388 42.2586 41.859 42.2787 41.8724 42.3056C41.8926 42.3325 41.8959 42.3627 41.8825 42.3963C41.9363 42.3426 41.9967 42.3023 42.0639 42.2754C42.1311 42.2418 42.1983 42.2183 42.2655 42.2048C42.3394 42.1847 42.4099 42.1679 42.4771 42.1545C42.551 42.141 42.6216 42.1209 42.6888 42.094C42.8567 42.188 42.9777 42.2082 43.0516 42.1545C43.1255 42.1007 43.1859 42.0201 43.233 41.9126C43.28 41.8051 43.3304 41.6942 43.3842 41.58C43.4379 41.4591 43.5252 41.3851 43.6462 41.3583L43.5756 41.2877C43.6899 41.1466 43.7906 41.0022 43.878 40.8544C43.972 40.6998 44.0157 40.5285 44.009 40.3404ZM60.0196 40.7737C59.9591 40.8275 59.8752 40.898 59.7677 40.9854C59.6669 41.066 59.5997 41.1399 59.5661 41.2071C59.5258 41.2743 59.4922 41.3348 59.4653 41.3885C59.4452 41.4423 59.4183 41.4893 59.3847 41.5296C59.3578 41.5632 59.3175 41.5901 59.2638 41.6102C59.2167 41.6304 59.1495 41.6405 59.0622 41.6405C59.0622 41.6606 59.0252 41.7043 58.9513 41.7715C58.8841 41.8319 58.8102 41.8991 58.7296 41.973C58.649 42.0402 58.5751 42.1074 58.5079 42.1746C58.4407 42.2351 58.4071 42.2754 58.4071 42.2955L58.3164 42.2452C58.303 42.2384 58.2627 42.2418 58.1955 42.2552C58.135 42.262 58.0611 42.2821 57.9737 42.3157C57.8931 42.3426 57.8125 42.3829 57.7319 42.4366C57.6512 42.4904 57.5874 42.5609 57.5404 42.6483L57.5001 42.6382C57.3993 42.6113 57.2951 42.6046 57.1876 42.618C57.0869 42.6382 56.9861 42.6483 56.8853 42.6483C56.6703 42.6617 56.5124 42.6281 56.4116 42.5475C56.3108 42.4736 56.2033 42.3291 56.0891 42.1141C56.0622 42.0671 56.0387 42.0167 56.0186 41.963C55.9984 41.9092 55.9816 41.8555 55.9682 41.8017V41.7614C56.0622 41.7077 56.1126 41.6371 56.1194 41.5498C56.1261 41.4557 56.1227 41.3583 56.1093 41.2575C56.0958 41.1567 56.0858 41.0593 56.079 40.9652C56.079 40.8712 56.116 40.7939 56.1899 40.7334C56.1496 40.6259 56.1529 40.5251 56.2 40.4311C56.2537 40.3303 56.3041 40.2362 56.3512 40.1489C56.3982 40.0615 56.4217 39.9776 56.4217 39.8969C56.4217 39.8163 56.3478 39.7323 56.2 39.645C56.0454 39.7055 55.8976 39.7827 55.7565 39.8768C55.6222 39.9641 55.4844 40.0582 55.3433 40.159C55.209 40.253 55.0712 40.3471 54.9301 40.4412C54.7958 40.5352 54.6513 40.6125 54.4968 40.673C54.3557 40.8275 54.2079 40.9619 54.0533 41.0761C53.8988 41.1836 53.7476 41.2978 53.5998 41.4187C53.4587 41.5397 53.3277 41.6774 53.2068 41.8319C53.0925 41.9798 53.0052 42.1645 52.9447 42.3862C52.9111 42.3459 52.8775 42.3191 52.8439 42.3056C52.8103 42.2922 52.7667 42.2787 52.7129 42.2653C52.639 42.2452 52.5853 42.225 52.5517 42.2048C52.5181 42.178 52.4744 42.141 52.4207 42.094L52.4307 42.0738C52.4912 41.8991 52.5618 41.7211 52.6424 41.5397C52.723 41.3583 52.7633 41.1769 52.7633 40.9955C52.7633 40.9283 52.7566 40.8678 52.7432 40.8141C52.7297 40.7536 52.723 40.6898 52.723 40.6226C52.723 40.5016 52.7432 40.3908 52.7835 40.29C52.8238 40.1892 52.8675 40.0951 52.9145 40.0078C52.9682 39.9205 53.0153 39.8365 53.0556 39.7558C53.1026 39.6685 53.1261 39.5778 53.1261 39.4837C53.1261 39.4098 53.1093 39.3359 53.0757 39.262C53.0421 39.1881 52.9985 39.1243 52.9447 39.0705C52.8439 39.0638 52.7499 39.0772 52.6625 39.1108C52.5752 39.1377 52.4878 39.1713 52.4005 39.2116C52.3132 39.2519 52.2225 39.2889 52.1284 39.3225C52.0343 39.3494 51.9335 39.3594 51.826 39.3527C51.685 39.4938 51.5405 39.6349 51.3927 39.776C51.2449 39.9104 51.0971 40.0447 50.9492 40.1791C50.6402 40.4546 50.3378 40.7401 50.0422 41.0358C49.7533 41.3314 49.5215 41.6673 49.3468 42.0436C49.3132 42.1175 49.283 42.1948 49.2561 42.2754C49.2359 42.3493 49.2091 42.4232 49.1755 42.4971C49.1755 42.5105 49.1688 42.524 49.1553 42.5374H49.1049C49.031 42.5374 48.9806 42.5576 48.9538 42.5979C48.9336 42.6382 48.9168 42.6819 48.9034 42.7289C48.8967 42.7827 48.8866 42.833 48.8731 42.8801C48.8597 42.9271 48.8295 42.9573 48.7824 42.9708C48.7287 42.9842 48.6783 42.9741 48.6313 42.9405C48.5775 42.907 48.5338 42.8734 48.5002 42.8398L48.4902 42.8297C48.423 42.7222 48.386 42.6113 48.3793 42.4971C48.3726 42.3829 48.386 42.272 48.4196 42.1645C48.4465 42.0503 48.4902 41.9394 48.5506 41.8319C48.6044 41.7244 48.6581 41.6237 48.7119 41.5296C48.7925 41.3885 48.8664 41.2441 48.9336 41.0962C49.0075 40.9417 49.0445 40.7805 49.0445 40.6125C49.0445 40.5386 49.0344 40.4748 49.0142 40.421C49.0008 40.3605 48.9874 40.3001 48.9739 40.2396L49.1956 40.0884C49.162 40.0414 49.1419 40.0011 49.1352 39.9675C49.1352 39.9272 49.1352 39.8902 49.1352 39.8566C49.1419 39.823 49.1452 39.7928 49.1452 39.7659C49.152 39.7323 49.1486 39.6987 49.1352 39.6651V39.6349L49.2158 39.5442C49.2024 39.3225 49.1956 39.1142 49.1956 38.9194C49.1956 38.7245 49.1553 38.5196 49.0747 38.3046C49.1688 38.2172 49.2595 38.1971 49.3468 38.2441C49.4342 38.2844 49.5215 38.3315 49.6088 38.3852V38.3953L49.6189 38.4054C49.6727 38.486 49.7197 38.5834 49.76 38.6976C49.8003 38.8119 49.8306 38.9328 49.8507 39.0604C49.8776 39.1814 49.8978 39.3023 49.9112 39.4233C49.9246 39.5442 49.9313 39.6517 49.9313 39.7458C49.9313 39.7726 49.928 39.7995 49.9213 39.8264C49.9213 39.8465 49.9213 39.8701 49.9213 39.8969L49.8608 39.9574C49.8944 39.991 49.9313 40.0246 49.9717 40.0582C50.012 40.0918 50.0556 40.1052 50.1027 40.0985C50.143 39.9776 50.2068 39.9003 50.2942 39.8667C50.3815 39.8264 50.4688 39.7962 50.5562 39.776C50.6503 39.7558 50.7309 39.729 50.7981 39.6954C50.872 39.6551 50.9089 39.5744 50.9089 39.4535C50.9089 39.4266 50.9056 39.4065 50.8989 39.393L50.919 39.3729C51.1071 39.1847 51.2986 39.0168 51.4935 38.869C51.695 38.7144 51.9033 38.6002 52.1183 38.5263C52.34 38.4524 52.5685 38.4222 52.8036 38.4356C53.0455 38.449 53.3042 38.5229 53.5797 38.6573L53.5998 38.6674L53.7107 39.0806L53.6401 39.1511C53.7073 39.2452 53.7308 39.3561 53.7107 39.4837C53.6972 39.6047 53.6704 39.7256 53.63 39.8465C53.5897 39.9675 53.5528 40.0817 53.5192 40.1892C53.4856 40.29 53.4889 40.3639 53.5293 40.4109C53.5629 40.458 53.6233 40.4781 53.7107 40.4714C53.8047 40.4647 53.8786 40.458 53.9324 40.4512C53.9861 40.3773 54.06 40.3135 54.1541 40.2598C54.2549 40.206 54.3523 40.1556 54.4464 40.1086C54.5472 40.0615 54.6345 40.0145 54.7084 39.9675C54.7823 39.9137 54.8226 39.8566 54.8293 39.7962C54.9368 39.8163 55.0242 39.813 55.0914 39.7861C55.1586 39.7525 55.2123 39.7055 55.2526 39.645C55.2929 39.5845 55.3299 39.5207 55.3635 39.4535C55.3971 39.3796 55.434 39.3124 55.4744 39.2519C55.5214 39.1847 55.5785 39.1344 55.6457 39.1008C55.7129 39.0672 55.8036 39.0571 55.9178 39.0705C56.0723 38.916 56.2537 38.8051 56.462 38.7379C56.677 38.664 56.892 38.6237 57.107 38.617C57.2616 38.6103 57.3691 38.6573 57.4295 38.7581C57.49 38.8522 57.5202 38.9664 57.5202 39.1008C57.5202 39.2754 57.4799 39.4434 57.3993 39.6047C57.3187 39.7659 57.228 39.9305 57.1272 40.0985C57.0264 40.2665 56.9357 40.4412 56.8551 40.6226C56.7744 40.804 56.7341 41.0055 56.7341 41.2273C56.7341 41.2474 56.7341 41.2844 56.7341 41.3381C56.7341 41.3851 56.7375 41.4355 56.7442 41.4893C56.7509 41.5363 56.7576 41.5834 56.7644 41.6304C56.7778 41.6707 56.7946 41.6976 56.8148 41.711C56.8416 41.7244 56.8651 41.7345 56.8853 41.7412L56.8349 41.7816C56.9894 41.8017 57.1272 41.8319 57.2481 41.8723C57.3691 41.9059 57.5001 41.8924 57.6412 41.8319C57.6815 41.8185 57.7218 41.8084 57.7621 41.8017C57.8091 41.795 57.8528 41.7849 57.8931 41.7715C57.9536 41.7648 57.9905 41.7412 58.004 41.7009C58.0174 41.6539 58.0409 41.6102 58.0745 41.5699C58.1148 41.5229 58.1753 41.4826 58.2559 41.449C58.3433 41.4087 58.4844 41.3885 58.6792 41.3885V41.2273C58.8136 41.1869 58.9278 41.1366 59.0219 41.0761C59.1159 41.0089 59.2066 40.9484 59.294 40.8947C59.388 40.8409 59.4888 40.8006 59.5963 40.7737C59.7106 40.7469 59.8516 40.7469 60.0196 40.7737ZM61.4439 36.2386C61.3229 36.2856 61.2557 36.3561 61.2423 36.4502C61.2289 36.5443 61.2221 36.6417 61.2221 36.7425C61.2289 36.8432 61.2255 36.9373 61.2121 37.0247C61.1986 37.112 61.1314 37.1691 61.0105 37.196C60.9635 37.1154 60.903 37.0414 60.8291 36.9743C60.7619 36.9004 60.6947 36.8298 60.6275 36.7626C60.5603 36.6887 60.5066 36.6114 60.4663 36.5308C60.426 36.4502 60.4125 36.3528 60.426 36.2386L60.9299 35.654C61.0105 35.6809 61.0743 35.7145 61.1214 35.7548C61.1684 35.7951 61.2087 35.8421 61.2423 35.8959C61.2759 35.9496 61.3061 36.0068 61.333 36.0672C61.3666 36.121 61.4036 36.1781 61.4439 36.2386ZM63.399 40.7536C63.4058 40.9014 63.3923 41.0055 63.3587 41.066C63.3318 41.1265 63.2983 41.1769 63.2579 41.2172C63.2176 41.2508 63.1807 41.2911 63.1471 41.3381C63.1202 41.3784 63.1068 41.4523 63.1068 41.5598C62.9522 41.7278 62.8279 41.8521 62.7339 41.9327C62.6398 42.0066 62.5491 42.0705 62.4618 42.1242C62.3744 42.1712 62.277 42.225 62.1695 42.2855C62.062 42.3459 61.9142 42.44 61.7261 42.5677L61.6555 42.5777C61.6354 42.6785 61.5984 42.7356 61.5447 42.7491C61.4976 42.7692 61.4405 42.7793 61.3733 42.7793C61.3129 42.7793 61.2524 42.786 61.1919 42.7995C61.1314 42.8129 61.0811 42.87 61.0407 42.9708C60.9265 43.0044 60.8291 43.0178 60.7485 43.0111C60.6678 43.0044 60.5637 43.001 60.436 43.001C60.3957 43.001 60.342 42.9977 60.2748 42.9909C60.2143 42.9842 60.1639 42.9876 60.1236 43.001C60.0968 43.0077 60.0665 43.0245 60.0329 43.0514C60.006 43.085 59.9758 43.1119 59.9422 43.132C59.9086 43.1522 59.875 43.1589 59.8414 43.1522C59.8078 43.1522 59.7776 43.1253 59.7507 43.0716C59.6701 43.0917 59.5962 43.0917 59.529 43.0716C59.4618 43.0514 59.398 43.0178 59.3375 42.9708C59.2771 42.9238 59.2199 42.8666 59.1662 42.7995C59.1192 42.739 59.0721 42.6819 59.0251 42.6281C58.9915 42.5878 58.9546 42.5509 58.9142 42.5173C58.8739 42.4837 58.837 42.4501 58.8034 42.4165C58.7295 42.3426 58.6757 42.2485 58.6421 42.1343C58.6085 42.0201 58.5884 41.9025 58.5817 41.7816C58.5749 41.6606 58.5783 41.5397 58.5917 41.4187C58.6052 41.2978 58.6253 41.1903 58.6522 41.0962C58.7127 41.0358 58.7564 40.9686 58.7832 40.8947C58.8034 40.8141 58.8202 40.7334 58.8336 40.6528C58.8538 40.5722 58.8739 40.4949 58.8941 40.421C58.921 40.3404 58.9646 40.2698 59.0251 40.2094C59.0251 40.122 59.0385 40.0414 59.0654 39.9675C59.099 39.8936 59.1393 39.823 59.1864 39.7558C59.2401 39.6887 59.2972 39.6282 59.3577 39.5744C59.4249 39.514 59.4853 39.4569 59.5391 39.4031C59.5928 39.4031 59.6466 39.4031 59.7003 39.4031C59.7541 39.3964 59.8045 39.3997 59.8515 39.4132C59.8985 39.4199 59.9389 39.4401 59.9725 39.4737C60.006 39.5005 60.0329 39.5476 60.0531 39.6147C60.1001 39.7962 60.0867 39.944 60.0128 40.0582C59.9456 40.1657 59.8683 40.2698 59.781 40.3706C59.6936 40.4714 59.6231 40.5755 59.5693 40.683C59.5156 40.7905 59.529 40.9283 59.6096 41.0962C59.5357 41.0962 59.4853 41.1164 59.4585 41.1567C59.4383 41.197 59.4215 41.2441 59.4081 41.2978C59.4014 41.3448 59.3879 41.3919 59.3678 41.4389C59.3476 41.4859 59.3073 41.5195 59.2468 41.5397C59.2871 41.58 59.3073 41.6505 59.3073 41.7513C59.314 41.8521 59.3241 41.9495 59.3375 42.0436C59.3577 42.1309 59.3879 42.2015 59.4282 42.2552C59.4753 42.309 59.5592 42.3123 59.6802 42.2653C59.7675 42.3392 59.8717 42.3695 59.9926 42.356C60.1203 42.3426 60.2378 42.3392 60.3453 42.3459C60.4394 42.2855 60.52 42.2552 60.5872 42.2552C60.6544 42.2485 60.7182 42.2552 60.7787 42.2754C60.8392 42.2888 60.903 42.3023 60.9702 42.3157C61.0374 42.3291 61.118 42.3191 61.2121 42.2855C61.2389 42.1712 61.286 42.1041 61.3532 42.0839C61.4204 42.0637 61.4875 42.0537 61.5547 42.0537C61.6219 42.0469 61.6824 42.0335 61.7361 42.0134C61.7966 41.9932 61.8369 41.926 61.8571 41.8118C61.9108 41.7446 61.9747 41.7077 62.0486 41.7009C62.1225 41.6875 62.1964 41.6741 62.2703 41.6606C62.3509 41.6472 62.4215 41.6203 62.4819 41.58C62.5491 41.533 62.5961 41.4456 62.623 41.318C62.7372 41.2306 62.8179 41.1668 62.8649 41.1265C62.9186 41.0794 62.9623 41.0425 62.9959 41.0156C63.0295 40.9887 63.0732 40.9585 63.1269 40.9249C63.1807 40.8913 63.2714 40.8342 63.399 40.7536ZM68.7336 39.3628C68.7605 39.4636 68.7504 39.5509 68.7034 39.6248C68.6564 39.692 68.5925 39.7525 68.5119 39.8062C68.438 39.86 68.354 39.9104 68.2599 39.9574C68.1726 39.9977 68.0987 40.0447 68.0382 40.0985C67.7359 40.1657 67.4604 40.2161 67.2118 40.2497C66.9699 40.2765 66.7012 40.3135 66.4056 40.3605C66.3182 40.374 66.2342 40.374 66.1536 40.3605C66.0797 40.3404 66.0024 40.3337 65.9218 40.3404C65.8748 40.3404 65.8311 40.3404 65.7908 40.3404C65.7505 40.3337 65.7102 40.3337 65.6699 40.3404C65.5153 40.3538 65.4145 40.4076 65.3675 40.5016C65.3205 40.589 65.2802 40.6931 65.2466 40.8141C65.2197 40.9283 65.1827 41.0391 65.1357 41.1466C65.0954 41.2474 65.0047 41.318 64.8636 41.3583C64.8502 41.3919 64.8535 41.4221 64.8737 41.449C64.9006 41.4759 64.9207 41.4994 64.9341 41.5195C64.8199 41.5531 64.7427 41.6136 64.7023 41.7009C64.6688 41.7883 64.6385 41.8756 64.6116 41.963C64.5848 42.0503 64.5445 42.1242 64.4907 42.1847C64.4437 42.2452 64.3496 42.2653 64.2085 42.2452C64.0002 42.4669 63.755 42.6449 63.4728 42.7793C63.1906 42.9204 62.8984 43.0111 62.596 43.0514C62.5423 43.0245 62.4885 42.9909 62.4348 42.9506C62.3877 42.9103 62.3373 42.8734 62.2836 42.8398C62.2365 42.8062 62.1828 42.7793 62.1223 42.7591C62.0686 42.7457 62.0048 42.7457 61.9308 42.7591C61.9241 42.618 61.8972 42.487 61.8502 42.3661C61.7965 42.2452 61.7293 42.1309 61.6487 42.0234C61.6352 41.9025 61.652 41.7916 61.699 41.6909C61.7394 41.5834 61.783 41.4792 61.8301 41.3784C61.8771 41.2776 61.9174 41.1769 61.951 41.0761C61.9779 40.9686 61.9712 40.8476 61.9308 40.7133C61.998 40.673 62.0417 40.6259 62.0619 40.5722C62.0887 40.5184 62.1055 40.4647 62.1123 40.4109C62.1257 40.3505 62.1425 40.2967 62.1626 40.2497C62.1828 40.1959 62.2298 40.1522 62.3037 40.1187C62.25 39.9574 62.2567 39.8398 62.3239 39.7659C62.3978 39.6853 62.4851 39.6147 62.5859 39.5543C62.6867 39.4938 62.7808 39.4266 62.8681 39.3527C62.9555 39.2788 62.9891 39.1679 62.9689 39.0201C63.0092 38.9798 63.0562 38.9462 63.11 38.9194C63.1637 38.8925 63.2141 38.869 63.2612 38.8488C63.3149 38.8219 63.3653 38.7951 63.4123 38.7682C63.4594 38.7413 63.503 38.7043 63.5434 38.6573C63.4963 38.6237 63.4728 38.5901 63.4728 38.5565C63.4795 38.5229 63.4896 38.4893 63.503 38.4558C63.5165 38.4154 63.5299 38.3751 63.5434 38.3348C63.5635 38.2945 63.5635 38.2542 63.5434 38.2139C63.7248 38.2408 63.8827 38.2172 64.017 38.1433C64.1581 38.0627 64.2891 37.9821 64.4101 37.9015C64.5377 37.8208 64.6654 37.7637 64.7931 37.7301C64.9207 37.6965 65.0685 37.7368 65.2365 37.8511C65.2499 37.8981 65.2701 37.9686 65.297 38.0627C65.3306 38.15 65.3608 38.2408 65.3877 38.3348C65.4213 38.4289 65.4515 38.5196 65.4784 38.6069C65.5052 38.6943 65.522 38.7581 65.5288 38.7984C65.5288 38.832 65.5288 38.8858 65.5288 38.9597C65.5288 39.0336 65.5288 39.1142 65.5288 39.2015C65.5288 39.2822 65.5288 39.3594 65.5288 39.4333C65.5288 39.5072 65.5288 39.5644 65.5288 39.6047C65.7236 39.7189 65.9184 39.7894 66.1133 39.8163C66.3081 39.8365 66.503 39.7894 66.6978 39.6752C66.7717 39.7424 66.8423 39.7626 66.9095 39.7357C66.9767 39.7021 67.0405 39.6651 67.101 39.6248C67.1681 39.5845 67.2353 39.5644 67.3025 39.5644C67.3697 39.5576 67.4369 39.6114 67.5041 39.7256C67.5981 39.6383 67.6956 39.5845 67.7964 39.5644C67.8971 39.5375 68.0013 39.524 68.1088 39.524C68.2163 39.5173 68.3204 39.5072 68.4212 39.4938C68.5287 39.4804 68.6328 39.4367 68.7336 39.3628ZM64.8636 39.5341C64.8636 39.4333 64.8804 39.3258 64.914 39.2116C64.9476 39.0974 64.9745 38.9865 64.9946 38.879C65.0148 38.7648 65.0114 38.6573 64.9845 38.5565C64.9644 38.4558 64.9006 38.3651 64.7931 38.2844C64.7191 38.3247 64.6587 38.3818 64.6116 38.4558C64.5646 38.5229 64.5176 38.5935 64.4705 38.6674C64.4235 38.7346 64.3664 38.7917 64.2992 38.8387C64.2387 38.8858 64.1581 38.8992 64.0573 38.879C64.0237 38.9597 64.0237 39.0269 64.0573 39.0806C64.0909 39.1276 64.1312 39.1747 64.1783 39.2217C64.2253 39.262 64.269 39.3057 64.3093 39.3527C64.3563 39.3997 64.3731 39.4602 64.3597 39.5341C64.3866 39.5543 64.4235 39.5744 64.4705 39.5946C64.5176 39.608 64.5646 39.6181 64.6116 39.6248C64.6654 39.6248 64.7158 39.6181 64.7628 39.6047C64.8098 39.5912 64.8434 39.5677 64.8636 39.5341ZM64.7931 40.3404C64.6587 40.3404 64.5411 40.3101 64.4403 40.2497C64.3463 40.1825 64.2488 40.1086 64.148 40.028C64.054 39.9473 63.9532 39.8734 63.8457 39.8062C63.7449 39.7323 63.6206 39.6887 63.4728 39.6752C63.4123 39.7558 63.3418 39.8331 63.2612 39.907C63.1805 39.9742 63.11 40.0481 63.0495 40.1287C62.9891 40.2094 62.9454 40.2967 62.9185 40.3908C62.8984 40.4848 62.9151 40.5923 62.9689 40.7133C62.8144 40.7872 62.7102 40.8947 62.6565 41.0358C62.6027 41.1701 62.5658 41.318 62.5456 41.4792C62.5322 41.6405 62.5187 41.8017 62.5053 41.963C62.4919 42.1242 62.4482 42.2687 62.3743 42.3963L62.596 42.2452C62.6229 42.2586 62.643 42.2787 62.6565 42.3056C62.6766 42.3325 62.68 42.3627 62.6666 42.3963C62.7203 42.3426 62.7808 42.3023 62.848 42.2754C62.9151 42.2418 62.9823 42.2183 63.0495 42.2048C63.1234 42.1847 63.194 42.1679 63.2612 42.1545C63.3351 42.141 63.4056 42.1209 63.4728 42.094C63.6408 42.188 63.7617 42.2082 63.8356 42.1545C63.9095 42.1007 63.97 42.0201 64.017 41.9126C64.0641 41.8051 64.1145 41.6942 64.1682 41.58C64.222 41.4591 64.3093 41.3851 64.4302 41.3583L64.3597 41.2877C64.4739 41.1466 64.5747 41.0022 64.662 40.8544C64.7561 40.6998 64.7998 40.5285 64.7931 40.3404Z\" fill=\"black\" />\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M38.1698 56.9435C38.1393 56.942 38.1055 56.9405 38.0682 56.9396C37.8474 56.9327 37.5499 56.9327 37.1351 56.9327C36.72 56.9327 36.4224 56.9327 36.202 56.9396C36.1646 56.9408 36.1308 56.942 36.1003 56.9435C36.1381 57.1909 36.2632 57.4166 36.453 57.5796C36.6428 57.7427 36.8848 57.8324 37.1351 57.8324C37.3853 57.8324 37.6273 57.7427 37.8172 57.5796C38.007 57.4166 38.1321 57.1909 38.1698 56.9435ZM37.1351 58.428C37.3511 58.428 37.565 58.3855 37.7645 58.3028C37.9641 58.2202 38.1454 58.099 38.2982 57.9463C38.4509 57.7935 38.5721 57.6122 38.6547 57.4126C38.7374 57.2131 38.7799 56.9992 38.7799 56.7832C38.7799 56.6504 38.7799 56.5568 38.7372 56.491C38.6358 56.3346 38.2931 56.3346 37.1351 56.3346C35.4902 56.3346 35.4902 56.3346 35.4902 56.7832C35.4902 57.2194 35.6635 57.6378 35.972 57.9463C36.2805 58.2547 36.6988 58.428 37.1351 58.428ZM42.122 51.8486H43.5649V55.4374H42.9668V52.4468H42.6154L41.7652 56.84L41.1778 56.7264L42.122 51.8486ZM44.297 57.8114C44.4321 57.7855 44.5607 57.7333 44.6756 57.6578C44.7904 57.5823 44.8893 57.4848 44.9665 57.3711C45.0437 57.2573 45.0977 57.1295 45.1255 56.9948C45.1533 56.8602 45.1543 56.7214 45.1284 56.5864L45.7158 56.4739C45.7978 56.9024 45.7063 57.3459 45.4613 57.7069C45.2163 58.0678 44.838 58.3167 44.4095 58.3987C43.981 58.4807 43.5375 58.3892 43.1766 58.1442C42.8156 57.8992 42.5667 57.5209 42.4847 57.0924L43.0721 56.98C43.0979 57.115 43.1501 57.2436 43.2256 57.3585C43.3012 57.4733 43.3986 57.5722 43.5123 57.6494C43.6261 57.7266 43.7539 57.7806 43.8886 57.8084C44.0232 57.8362 44.162 57.8372 44.297 57.8114Z\" fill=\"#1B1B1B\" />\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M44.8721 55.6807C44.6751 55.5427 44.4446 55.4601 44.2048 55.4413C43.9649 55.4226 43.7245 55.4686 43.5084 55.5743C43.2923 55.6801 43.1086 55.8419 42.9762 56.0428C42.8439 56.2437 42.7678 56.4764 42.756 56.7167L45.3405 56.2609C45.2421 56.0273 45.0798 55.8262 44.8721 55.6807ZM43.7626 54.8688C44.2103 54.7899 44.6715 54.8704 45.0659 55.0962C45.4604 55.3221 45.7633 55.6791 45.9218 56.1051C46.0582 56.4706 45.7849 56.79 45.4774 56.8438L42.8268 57.3115C42.5197 57.3654 42.1537 57.159 42.1563 56.769C42.1597 56.3145 42.3222 55.8754 42.6156 55.5282C42.9091 55.1811 43.3149 54.9477 43.7626 54.8688ZM39.079 53.0454L36.3874 53.0454C36.3081 53.0454 36.232 53.0769 36.176 53.133C36.1199 53.1891 36.0884 53.2651 36.0884 53.3445L36.0884 53.9426H39.3781V53.3445C39.3781 53.2651 39.3465 53.1891 39.2905 53.133C39.2344 53.0769 39.1583 53.0454 39.079 53.0454ZM36.3874 52.4473C36.1495 52.4473 35.9213 52.5418 35.753 52.71C35.5848 52.8783 35.4902 53.1065 35.4902 53.3445V54.2416C35.4902 54.321 35.5217 54.397 35.5778 54.4531C35.6339 54.5092 35.71 54.5407 35.7893 54.5407H39.6771C39.7564 54.5407 39.8325 54.5092 39.8886 54.4531C39.9447 54.397 39.9762 54.321 39.9762 54.2416V53.3445C39.9762 53.1065 39.8817 52.8783 39.7134 52.71C39.5451 52.5418 39.3169 52.4473 39.079 52.4473H36.3874Z\" fill=\"#1B1B1B\" />\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M39.0792 54.5401H37.0115C35.8233 54.5401 34.8726 55.3282 34.6453 56.3345H39.046C39.0578 56.3351 39.0695 56.3318 39.0792 56.325V54.5401ZM37.0115 53.942C35.3457 53.942 33.9951 55.2214 33.9951 56.7999C33.9951 56.8731 34.0579 56.9326 34.1357 56.9326H39.046C39.3947 56.9326 39.6773 56.665 39.6773 56.3345V54.1813C39.6773 54.0491 39.5643 53.942 39.4249 53.942H37.0115ZM43.2661 50.6523H42.6679C42.5093 50.6523 42.3572 50.7153 42.245 50.8275C42.1328 50.9397 42.0698 51.0918 42.0698 51.2505C42.0698 51.4091 42.1328 51.5612 42.245 51.6734C42.3572 51.7856 42.5093 51.8486 42.6679 51.8486H43.2661V50.6523ZM42.6679 50.0542C42.3507 50.0542 42.0464 50.1802 41.8221 50.4046C41.5977 50.6289 41.4717 50.9332 41.4717 51.2505C41.4717 51.5677 41.5977 51.872 41.8221 52.0963C42.0464 52.3207 42.3507 52.4467 42.6679 52.4467H43.6803C43.782 52.4467 43.8642 52.3642 43.8642 52.2628V50.2381C43.8642 50.1893 43.8448 50.1426 43.8103 50.1081C43.7758 50.0736 43.7291 50.0542 43.6803 50.0542H42.6679Z\" fill=\"#1B1B1B\" />\n            <path d=\"M40.3789 50.353L41.8518 50.612L41.748 51.2012L40.2754 50.9422L40.3789 50.353Z\" fill=\"#1B1B1B\" />\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M42.3681 56.9323H38.7793V56.3342H42.3681V56.9323ZM41.7699 55.437H39.0784V54.8389H41.7699V55.437Z\" fill=\"#1B1B1B\" />\n            <path d=\"M16.7318 51.9341C16.9623 52.3702 17.1186 52.8019 17.2007 53.2293C17.2862 53.6549 17.259 54.0529 17.1191 54.4232C16.9827 54.7918 16.7015 55.0886 16.2756 55.3138C15.8498 55.5389 15.4444 55.605 15.0596 55.512C14.6782 55.4172 14.334 55.2155 14.0271 54.907C13.7235 54.5967 13.4565 54.2234 13.226 53.7873L11.3511 50.2406L12.0001 49.8975L12.5512 50.9401L14.759 49.773L14.2078 48.7304L14.8569 48.3873L16.7318 51.9341ZM13.8102 53.3216C13.9867 53.6555 14.1549 53.9284 14.3148 54.1402C14.48 54.3537 14.6868 54.5016 14.9351 54.5839C15.1887 54.6678 15.4825 54.6215 15.8164 54.445C16.1434 54.2721 16.342 54.0581 16.4121 53.8031C16.4856 53.5463 16.4806 53.2896 16.3972 53.0329C16.3173 52.7744 16.1908 52.4816 16.0179 52.1545L15.1966 50.6009L12.9889 51.768L13.8102 53.3216Z\" fill=\"#1B1B1B\" />\n            <path d=\"M22.1958 60.9446L22.7846 60.308L20.2512 57.9646L19.6075 58.6605L20.7405 59.7086L21.0624 59.3606L21.6013 59.8591L20.4865 61.0643L19.9475 60.5658L20.2733 60.2136L19.1403 59.1655L18.5554 59.7978L21.0888 62.1412L21.6776 61.5047L22.2844 62.066L21.1971 63.2415L16.5165 58.9118L17.0151 58.3728L17.8765 59.1697L19.5723 57.3365L18.7108 56.5396L19.2094 56.0007L23.8899 60.3304L22.8026 61.5059L22.1958 60.9446Z\" fill=\"#1B1B1B\" />\n            <path d=\"M30.2062 66.1132L29.4815 67.6951L24.2786 65.3116L24.5844 64.6442L25.6565 65.1353L26.6965 62.865L25.6244 62.3738L25.9302 61.7064L28.91 63.0715L28.6043 63.7389L27.5374 63.2502L26.4973 65.5205L29.0357 66.6834L29.4546 65.7689L30.2062 66.1132Z\" fill=\"#1B1B1B\" />\n            <path d=\"M35.1069 65.6676L34.6695 68.1263L35.8248 68.3318L35.6962 69.0546L32.4579 68.4785L32.5865 67.7557L33.7475 67.9622L34.1849 65.5036L33.0239 65.2971L33.1524 64.5743L36.3908 65.1504L36.2622 65.8731L35.1069 65.6676Z\" fill=\"#1B1B1B\" />\n            <path d=\"M45.1309 65.5851L44.1293 65.677L42.1405 69.18L41.6339 69.2265L39.0233 66.1458L38.0389 66.2361L37.9718 65.5051L40.7522 65.2498L40.8193 65.9809L40.1803 66.0395L41.9161 68.1267L43.2197 65.7605L42.4829 65.8282L42.4158 65.0971L45.0638 64.854L45.1309 65.5851Z\" fill=\"#1B1B1B\" />\n            <path d=\"M52.425 63.633L52.0694 62.8421L48.9219 64.2573L49.3106 65.122L50.7183 64.4891L50.5239 64.0567L51.1935 63.7557L51.8667 65.253L51.1972 65.5541L51.0004 65.1165L49.5927 65.7494L49.9459 66.535L53.0935 65.1198L52.7379 64.3289L53.4918 63.9899L54.1485 65.4504L48.3331 68.065L48.0321 67.3955L49.1024 66.9142L48.0783 64.6366L47.008 65.1178L46.707 64.4483L52.5223 61.8336L53.1789 63.294L52.425 63.633Z\" fill=\"#1B1B1B\" />\n            <path d=\"M61.6499 57.0832L61.7904 57.2288C61.9831 57.4285 62.1112 57.6556 62.1748 57.9102C62.2358 58.162 62.2313 58.4127 62.1615 58.6622C62.0916 58.9117 61.9624 59.1274 61.7738 59.3094C61.5825 59.494 61.373 59.6266 61.1454 59.707C60.9178 59.782 60.6977 59.8231 60.485 59.8302C60.2722 59.8373 60.0353 59.8276 59.7741 59.8012C59.5156 59.7775 59.325 59.7687 59.2023 59.7747C59.0796 59.7752 58.9454 59.811 58.7997 59.882C58.6513 59.9502 58.4842 60.0739 58.2984 60.2532L57.7119 60.8192L58.3502 61.4806L59.1655 60.6938L59.6753 61.2221L57.3375 63.4781L56.8237 62.9457L57.6723 62.1268L55.9422 60.334L55.0936 61.1529L54.5838 60.6246L58.0446 57.2848C58.419 56.9235 58.7811 56.7133 59.131 56.6541C59.4837 56.5922 59.7872 56.693 60.0414 56.9565C60.2957 57.2199 60.3911 57.5241 60.3277 57.8691C60.2671 58.2115 60.0607 58.5526 59.7085 58.8924L59.4465 59.1453C59.6329 59.0832 59.8897 59.0524 60.2167 59.0527C60.4729 59.0519 60.6763 59.0323 60.8269 58.9941C60.9748 58.9531 61.1111 58.8724 61.2359 58.752C61.3635 58.6289 61.4289 58.4774 61.4321 58.2976C61.4354 58.1123 61.3661 57.9462 61.2243 57.7992L61.0717 57.6412L61.6499 57.0832ZM56.616 59.6837L57.2342 60.3243L59.1934 58.4336C59.3543 58.2784 59.4496 58.1302 59.4793 57.989C59.5092 57.8423 59.4719 57.7149 59.3676 57.6068C59.2739 57.5097 59.16 57.4777 59.0259 57.5107C58.8891 57.541 58.7388 57.6351 58.5752 57.793L56.616 59.6837Z\" fill=\"#1B1B1B\" />\n            <path d=\"M64.6251 52.0178L65.3561 52.3911L65.8793 51.3667L66.5331 51.7006L65.0607 54.5835L64.4069 54.2496L64.9301 53.2251L64.23 52.8675L61.8175 53.8293L61.4362 54.5758L60.7824 54.2418L61.9419 51.9715L62.5957 52.3055L62.3617 52.7636L64.0114 52.1263L63.5318 50.4727L63.2373 51.0493L62.5835 50.7154L63.743 48.4451L64.3968 48.779L63.963 49.6285L64.6251 52.0178Z\" fill=\"#1B1B1B\" />\n            <path d=\"M15.8098 24.5832C16.0738 24.1827 16.3726 23.8646 16.7062 23.6288C17.0353 23.3901 17.3763 23.2583 17.7295 23.2335C18.0856 23.204 18.4271 23.297 18.754 23.5125C19.0762 23.7248 19.2964 24.002 19.4144 24.3439C19.5309 24.6782 19.5489 25.0466 19.4685 25.4492C19.3834 25.8488 19.2089 26.2489 18.9449 26.6494L16.8606 29.8122L17.5857 30.29L18.5687 28.7984L19.4457 29.3764L16.797 33.3955L15.92 32.8175L16.8484 31.4087L13.8652 29.4427L12.9367 30.8514L12.0597 30.2735L15.8098 24.5832ZM18.0637 26.138C18.2609 25.8387 18.358 25.5561 18.3551 25.29C18.3476 25.0209 18.2356 24.815 18.0192 24.6724C17.789 24.5207 17.5534 24.4975 17.3124 24.6028C17.0743 24.7034 16.8552 24.9057 16.6549 25.2095L14.6024 28.324L16.0112 29.2524L18.0637 26.138Z\" fill=\"#1B1B1B\" />\n            <path d=\"M25.5856 17.4949L27.4094 20.5672L28.8531 19.7102L29.3892 20.6133L25.3426 23.0155L24.8065 22.1123L26.2573 21.2511L24.4335 18.1788L22.9827 19.04L22.4466 18.1368L26.4932 15.7347L27.0293 16.6379L25.5856 17.4949Z\" fill=\"#1B1B1B\" />\n            <path d=\"M33.6036 17.8857L38.2005 13.9987C38.2979 13.9174 38.4022 13.8493 38.5133 13.7944C38.6293 13.7334 38.7225 13.6941 38.7928 13.6763L38.77 13.612C38.7486 13.6196 38.6731 13.6406 38.5434 13.6752C38.4138 13.7097 38.2749 13.7341 38.1267 13.7482L34.3889 14.1053L34.5447 15.7354L33.3674 15.8479L33.1118 13.1722L40.719 12.4455L40.8078 13.3758L36.196 17.2808C36.0518 17.3943 35.8623 17.4982 35.6277 17.5926L35.6414 17.6495C35.6628 17.6419 35.7356 17.6211 35.8598 17.5871C35.9894 17.5525 36.1255 17.5285 36.2683 17.5148L40.0307 17.1554L39.8742 15.5171L41.0515 15.4046L41.3079 18.0885L33.6924 18.816L33.6036 17.8857Z\" fill=\"#1B1B1B\" />\n            <path d=\"M47.0187 18.0458L52.9434 16.9793C53.0685 16.9576 53.1929 16.9508 53.3165 16.9588C53.4475 16.9641 53.5478 16.9766 53.6176 16.9963L53.6301 16.9293C53.6077 16.9251 53.5318 16.9056 53.4022 16.8707C53.2727 16.8357 53.1403 16.7873 53.0049 16.7255L49.5897 15.1651L48.9092 16.6545L47.8334 16.1631L48.9505 13.7183L55.9012 16.894L55.5128 17.744L49.5661 18.8187C49.3845 18.8448 49.1684 18.8401 48.918 18.8045L48.9014 18.8606C48.9238 18.8647 48.9972 18.8831 49.1217 18.9157C49.2513 18.9507 49.3812 18.9979 49.5116 19.0575L52.9494 20.6282L53.6333 19.1312L54.709 19.6227L53.5886 22.075L46.6303 18.8958L47.0187 18.0458Z\" fill=\"#1B1B1B\" />\n            <path d=\"M64.3771 33.1149L63.507 33.7033L61.2137 30.3121L62.0838 29.7237L62.6907 30.6212L63.0559 29.6553L60.8645 26.4148L59.8275 26.3873L60.4437 27.2984L59.5736 27.8868L57.2757 24.4888L58.1458 23.9004L59.0121 25.1815L63.5352 25.4774L62.9098 24.5525L63.773 23.9687L66.4045 27.8601L65.5413 28.4438L64.9205 27.5258L63.5107 31.8338L64.3771 33.1149ZM63.4572 28.5952L64.2395 26.5187L64.2209 26.4913L61.9978 26.4372L63.4572 28.5952Z\" fill=\"#1B1B1B\" />\n            <rect width=\"2.23343\" height=\"4.91355\" transform=\"translate(36.7725 25.0591)\" fill=\"#004538\" />\n            <rect width=\"2.23343\" height=\"4.91355\" transform=\"translate(39.0059 25.0591)\" fill=\"white\" />\n            <rect width=\"2.23343\" height=\"4.91355\" transform=\"translate(41.2393 25.0591)\" fill=\"#921515\" />\n            <circle cx=\"40\" cy=\"40\" r=\"39\" stroke=\"black\" strokeWidth=\"2\" />\n        </svg>\n    )\n}\n\nexport function LogoOutlineWords() {\n\n    return (\n        <img src=\"/images/logo-outline-words.png\" alt=\"Logo A Modo Mio\" width=\"300px\" height=\"300px\" />\n    )\n}\n\nexport function ItalianFlagSmall({ ...props }) {\n\n    return (\n        <img src=\"/images/italian-flag-small-bg-green.png\" alt=\"Logo A Modo Mio\" {...props} />\n    )\n}\n\ntype VespaProps = {\n    size?: \"sm\" | \"md\" | \"lg\";\n    className?: string;\n    color?: \"white\" | \"black\"\n};\n\nexport function Vespa({ size = \"md\", color = \"white\", ...props }: VespaProps) {\n    let width = \"60px\";\n    let height = \"23px\";\n\n    if (size === \"sm\") {\n        width = \"30px\";\n        height = \"12px\";\n    }\n\n    return (\n        <img src={`/images/vespa-${color}.svg`} alt=\"Vespa A Modo Mio\" width={width} height={height} {...props} />\n    )\n}\n\n", "import { Link, useSearchParams } from \"@remix-run/react\"\n\nexport interface TabItem {\n    id: string\n    name: string\n    linkTo?: string\n    default?: boolean\n    disabled?: boolean\n}\n\nexport interface TabsProps {\n    tabs: TabItem[]\n    bgStyle?: string\n    activeTabStyle?: string\n    inactiveTabStyle?: string\n    clazzName?: HTMLDivElement[\"className\"]\n}\n\n\nexport default function Tabs({ tabs, bgStyle, activeTabStyle, inactiveTabStyle, clazzName }: TabsProps) {\n    const [searchParams, setSearchParams] = useSearchParams()\n    let currentActiveTab = searchParams.get(\"tab\")\n\n    let baseActiveTabStyle = \"rounded-md py-1\"\n    activeTabStyle = activeTabStyle ? `${baseActiveTabStyle} ${activeTabStyle}` : `${baseActiveTabStyle} bg-primary text-white`\n    const backgroundStyle = bgStyle ? bgStyle : \"bg-muted\"\n\n\n    return (\n        <div className={`relative flex flex-wrap justify-center min-w-fit items-center p-1 rounded-md text-muted-foreground mb-6 ${backgroundStyle} ${clazzName}`}>\n\n            {tabs.map((tab, idx) => {\n\n                if (!currentActiveTab) {\n                    if (tab.default === true) {\n                        currentActiveTab = tab.id\n                    }\n                }\n\n                const children = (\n                    <div className={`${currentActiveTab === tab.id ? activeTabStyle : inactiveTabStyle} m-1`}>\n                        <span>{tab.name}</span>\n                    </div>\n                )\n\n                if (tab.linkTo && tab.disabled === false) return (\n                    <Link key={idx} to={tab.linkTo} className=\"w-1/2 md:w-1/4 lg:w-1/6 text-center\">\n                        {children}\n                    </Link >\n                )\n\n\n                return (\n                    <div key={idx} className=\"w-1/2 md:w-1/4 lg:w-1/6 text-center\" onClick={() => setSearchParams({ tab: tab.id })}>\n                        {children}\n                    </div>\n                )\n\n\n            })}\n\n        </div >\n    )\n}", "export default function toLowerCase(str: unknown): string {\n  if (typeof str !== \"string\") return str as string;\n  if (str.length === 0) return str;\n\n  return str.toLowerCase().trim();\n}\n", "import Tabs from \"~/components/primitives/tabs/tabs\"\nimport { type Category } from \"../../category.model.server\"\nimport toLowerCase from \"~/utils/to-lower-case\"\n\n\n\ninterface CategoriesTabsProps {\n    categories: Category[]\n    includeAll?: boolean\n    includeEmpty?: boolean\n    [x: string]: any\n}\n\nexport default function CategoriesTabs({ categories, includeAll = false, includeEmpty = true, ...props }: CategoriesTabsProps) {\n    const categoryTabs = categories.map(category => (\n        {\n            id: category.id ?? \"\",\n            name: category.name,\n            linkTo: `/admin?tab=${category.name}&categoryId=${category.id}`,\n            default: toLowerCase(category.name) === \"classica\"\n        }\n    ))\n\n\n    const tabs = [\n        ...categoryTabs\n    ]\n\n    if (includeAll) tabs.push({\n        id: \"all\",\n        name: \"Todas\",\n        linkTo: \"/admin?tab=all\",\n        default: true\n    })\n\n    if (includeEmpty) tabs.push({\n        id: \"empty\",\n        name: \"Sem Categoria\",\n        linkTo: \"/admin?tab=empty\",\n        default: true\n    })\n\n\n    return <Tabs tabs={tabs} {...props} />\n}", "import { useNavigate } from \"@remix-run/react\"\nimport { useState, useEffect } from \"react\"\n\ninterface EasterEggProps {\n    children: React.ReactNode\n    timeBeforeRedirect?: number\n    redirectTo: string\n    redirectSentence?: string\n    amountOfClicks?: number\n}\n\nexport default function EasterEgg({\n    children,\n    timeBeforeRedirect = 1500,\n    redirectTo,\n    redirectSentence = \"Aguarde...\",\n    amountOfClicks = 3\n}: EasterEggProps) {\n    const navigate = useNavigate()\n    const [clickedAmount, setClickedAmount] = useState(0)\n    const [showRedirect, setShowRedirect] = useState(false)\n\n    console.log('clickedAmount', clickedAmount)\n\n    const handleClick = () => {\n        setClickedAmount(clickedAmount + 1)\n    }\n\n    const isClickedEnough = clickedAmount > amountOfClicks\n\n\n    useEffect(() => {\n        let timeout: NodeJS.Timeout\n\n        if (isClickedEnough) {\n            setShowRedirect(true)\n\n            timeout = setTimeout(() => {\n                navigate(redirectTo)\n            }, timeBeforeRedirect)\n\n            return () => {\n                clearTimeout(timeout)\n            }\n\n        }\n    }, [isClickedEnough, navigate, redirectTo, timeBeforeRedirect])\n\n    if (showRedirect) {\n\n        return (\n            <div className=\"grid place-items-center\">\n                <span className=\"font-semibold text-sm\">{redirectSentence}</span>\n            </div>\n        )\n    }\n\n    return (\n        <div onClick={handleClick} >\n            {children}\n        </div>\n    )\n}", "import type { LinksFunction } from \"@remix-run/node\";\nimport { type V2_MetaFunction } from \"@remix-run/node\";\nimport { Link } from \"@remix-run/react\";\nimport { ArrowRight } from \"lucide-react\";\nimport Container from \"~/components/layout/container/container\";\nimport { LogoTransparent } from \"~/components/primitives/logo/logo\";\n\n// https://smart-pizza-marketing.framer.ai/\n\nexport const meta: V2_MetaFunction = () => {\n    return [\n        { title: \"Card\u00E1pio A Modio Mio\" },\n        {\n            name: \"description\",\n            content: \"Bem vindo ao card\u00E1pio da Pizza Delivery A Modo Mio\",\n        },\n    ];\n};\n\nexport const links: LinksFunction = () => [\n    { rel: \"preconnect\", href: \"https://fonts.googleapis.com\" },\n    {\n        rel: \"preconnect\",\n        href: \"https://fonts.gstatic.com\",\n    },\n    {\n        href: \"https://fonts.googleapis.com/css2?family=Homemade+Apple&family=BioRhyme+Expanded:wght@700&display=swap\",\n        rel: \"stylesheet\",\n    },\n];\n\n\n\nexport default function HomePage() {\n\n    return (\n        <>\n            <div className=\"relative h-screen bg-brand-orange z-0 overflow-hidden\">\n                <BgImage />\n                <div className=\"flex flex-col justify-end items-center gap-4 h-full\">\n                    <LogoTransparent />\n                    <div className=\"flex flex-col p-6\">\n                        <Heading />\n                        <div className=\"flex justify-center\">\n                            <LinkCardapio />\n                        </div>\n                    </div>\n                </div>\n            </div >\n            {/* <Container>\n                <section className=\"bg-red-500 p-4 w-full\">\n                    <h3>A nossa pizza</h3>\n                    <p>Primeira coisa: a nossa pizza n\u00E3o \u00E9 redonda! Ela \u00E9 retangular, \u00E0s vezes com umas curvinhas que a gente deixa de prop\u00F3sito. Nada de m\u00E1quinas para fazer a massa e as formas, \u00E9 s\u00F3 com as nossas m\u00E3os que tiramos um monte de massa. E no final, adoramos aquele toque r\u00FAstico</p>\n                    <p>N\u00F3s nos orgulhamos de n\u00E3o sermos convencionais. Afinal, pizza n\u00E3o precisa ser sempre igual, n\u00E9? Ah, e n\u00E3o se preocupe em comer com as m\u00E3os, afinal, pizza retangular pede um jeitinho especial. Aqui, a divers\u00E3o \u00E9 garantida!</p>\n                </section>\n                <section className=\"bg-green-500 p-4 w-full\">\n                    <h3>O tamanhno</h3>\n                    <p>Olha s\u00F3, a gente trabalha com uma medida s\u00F3: 35cm de comprimento e 25cm ou 27cm de largura. \u00C9 uma pizza feita especialmente para dois, mas se voc\u00EA estiver com muita fome, d\u00E1 pra encarar sozinho tamb\u00E9m! A nossa massa \u00E9 t\u00E3o levinha e o sabor \u00E9 t\u00E3o espetacular que \u00E9 imposs\u00EDvel resistir</p>\n                    <p>Ah, e n\u00E3o se esque\u00E7a de trazer a galera! Afinal, uma pizza gostosa \u00E9 ainda melhor quando compartilhada com pessoas especiais. Vamos fazer desse momento uma festa cheia de sabor e divers\u00E3o!</p>\n                </section>\n                <section className=\"bg-blue-500 h-[700px] w-full\">\n                    <h3>A massa</h3>\n                    <p>E a\u00ED, chegamos ao ponto alto: nossa massa \u00E9 simplesmente sensacional! Crocante, aerada, leve... \u00C9 uma verdadeira obra de arte inspirada na tradi\u00E7\u00E3o romana e feita pelo um verdadeiro italiano. J\u00E1 vou te adiantando: ningu\u00E9m na cidade oferece uma massa t\u00E3o espetacular quanto a nossa. Depois que voc\u00EA experimentar, pode apostar que n\u00E3o vai querer saber de outra pizza.</p>\n                    <p>Poucos e simples ingredientes: farinha, agua, sal, fermento e o que mais... Ah sim... o toque e a experien\u00E7a do chef!</p>\n                </section>\n                <section className=\"bg-brown-500 h-[700px] w-full\">\n                    <h3>As combina\u00E7\u00F5es</h3>\n                    <p>Na nossa pizzaria, a criatividade \u00E9 a nossa marca registrada. Estamos sempre inovando e criando novas combina\u00E7\u00F5es para surpreender os nossos clientes mais exigentes. Ent\u00E3o, esteja preparado para se encantar com sabores que v\u00E3o al\u00E9m do convencional, levando voc\u00EA a uma jornada gastron\u00F4mica \u00FAnica..</p>\n                    <p>Cada semana queremos oferecer uma no</p>\n                </section>\n            </Container> */}\n        </>\n    )\n}\n\nfunction BgImage() {\n    return (\n        <img src=\"/images/pizza-burrata-bg.png\" alt=\"Pizza burrata\"\n            className=\"z-20 absolute md:left-1/4 md:-top-40 md:w-auto md:h-auto w-[150%] max-w-none -left-4 -top-52\" />\n    )\n}\n\nfunction LinkCardapio() {\n    return (\n        <Link to=\"/cardapio\" className=\"p-12\">\n            <div className=\"bg-brand-cloud px-1 max-w-max h-full\">\n                <div className=\"flex justify-center items-center gap-1 mt-2 md:gap-8 h-full\">\n                    <span className=\"font-accent uppercase text-sm\">card\u00E1pio</span>\n                    <ArrowRight size={24} />\n                </div>\n            </div>\n        </Link>\n    )\n}\n\n\n\nfunction Heading() {\n    return (\n        <div className=\"flex flex-col justify-center\">\n            <div className=\"grid grid-cols-2\">\n                <h2 className=\"font-accent uppercase text-xl tracking-widest\">a pizza</h2>\n                <div className=\"relative w-auto z-0\">\n                    <div className=\"absolute top-0 left-0 bottom-0 w-full bg-brand-cloud z-10\"></div>\n                    <h2 className=\"relative font-logo text-2xl text-black z-20 ml-1\">a modo mio</h2>\n\n                </div>\n            </div>\n            <h2 className=\"font-accent uppercase text-xl mb-1\">n\u00E3o \u00E9 uma pizza</h2>\n            <div className=\"flex justify-center w-full bg-brand-cloud\">\n                <h2 className=\"relative font-accent uppercase text-2xl text-black z-20 tracking-[.55rem]\">\u00E9 a pizza.</h2>\n            </div>\n        </div>\n    )\n}\n", "import { type LinksFunction } from \"@remix-run/node\";\nimport { Outlet } from \"@remix-run/react\";\nimport { NavMenuCollapsible } from \"~/components/primitives/menu-collapsible/nav-menu-collapsible\";\n\nexport const links: LinksFunction = () => [\n    { rel: \"preconnect\", href: \"https://fonts.googleapis.com\" },\n    {\n        rel: \"preconnect\",\n        href: \"https://fonts.gstatic.com\",\n    },\n    {\n        href: \"https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800&display=swap\",\n        rel: \"stylesheet\",\n    },\n];\n\n\nexport default function AdminOutlet() {\n\n    return (\n\n        <div className=\"flex flex-col\">\n            <div className=\"fixed h-auto w-full bg-muted z-50\">\n                <NavMenuCollapsible navItems={\n                    [\n                        { label: \"Geren\u00E7iar card\u00E1pio\", to: \"/admin\" },\n                        { label: \"Categorias\", to: \"/admin/categorias\" },\n                        { label: \"Op\u00E7\u00F5es\", to: \"/admin/options\" },\n                        { label: \"Voltar para o card\u00E1pio\", to: \"/cardapio\" }\n                    ]\n                } />\n            </div>\n            <Outlet />\n        </div>\n    )\n}\n\n", "import { Link } from \"@remix-run/react\"\nimport { ChevronRight, ChevronsUpDown } from \"lucide-react\"\nimport { useState } from \"react\"\nimport { Button } from \"~/components/ui/button\"\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from \"~/components/ui/collapsible\"\n\n\nexport interface NavItemCollapsible {\n    label: string\n    to: string\n}\n\ninterface NavMenuCollapsibleProps {\n    navItems: NavItemCollapsible[]\n}\n\n\nexport function NavMenuCollapsible({ navItems }: NavMenuCollapsibleProps) {\n    const [isOpen, setIsOpen] = useState(false)\n\n    return (\n        <Collapsible\n            open={isOpen}\n            onOpenChange={setIsOpen}\n            className=\"space-y-2\"\n        >\n            <div className=\"flex items-center justify-between space-x-4 px-4\">\n                <h4 className=\"text-sm font-semibold\">\n                    Menu\n                </h4>\n                <CollapsibleTrigger asChild>\n                    <Button variant=\"ghost\" size=\"sm\" className=\"w-9 p-0\">\n                        <ChevronsUpDown className=\"h-4 w-4\" />\n                        <span className=\"sr-only\">Toggle</span>\n                    </Button>\n                </CollapsibleTrigger>\n            </div>\n            <CollapsibleContent className=\"py-6 px-4 bg-muted\">\n\n                {\n                    navItems && navItems.map((item, index) => {\n\n                        return (\n                            <Link key={index} to={item.to}>\n                                <div className=\"rounded-md border px-4 py-3 font-mono text-sm mb-2 flex justify-between items-center\">\n                                    <span>{item.label}</span>\n                                    <ChevronRight />\n                                </div>\n                            </Link>\n                        )\n                    })\n                }\n\n\n\n            </CollapsibleContent>\n        </Collapsible>\n    )\n}", "\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n", "\nimport * as entryServer from \"/home/lanzo/Documents/Coding/amodomio-manager/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/admin.categorias.tsx\";\nimport * as route2 from \"./routes/admin.options.tsx\";\nimport * as route3 from \"./routes/admin._index.tsx\";\nimport * as route4 from \"./routes/cardapio.tsx\";\nimport * as route5 from \"./routes/_index.tsx\";\nimport * as route6 from \"./routes/admin.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/admin.categorias\": {\n      id: \"routes/admin.categorias\",\n      parentId: \"routes/admin\",\n      path: \"categorias\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/admin.options\": {\n      id: \"routes/admin.options\",\n      parentId: \"routes/admin\",\n      path: \"options\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/admin._index\": {\n      id: \"routes/admin._index\",\n      parentId: \"routes/admin\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/cardapio\": {\n      id: \"routes/cardapio\",\n      parentId: \"root\",\n      path: \"cardapio\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/admin\": {\n      id: \"routes/admin\",\n      parentId: \"root\",\n      path: \"admin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    }\n  };"],
  "mappings": "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",
  "names": ["cssBundleHref", "isbot", "import_react", "import_jsx_dev_runtime", "React", "action", "toast", "props", "import_jsx_dev_runtime", "action", "import_jsx_dev_runtime", "import_node", "import_react", "import_lucide_react", "import_jsx_dev_runtime", "import_lucide_react", "import_jsx_dev_runtime", "import_react", "import_lucide_react", "React", "import_class_variance_authority", "import_jsx_dev_runtime", "React", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_lucide_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "React", "import_class_variance_authority", "import_jsx_dev_runtime", "React", "import_jsx_dev_runtime", "import_node", "response", "import_firestore", "doc", "import_jsx_dev_runtime", "action", "action", "import_react", "import_jsx_dev_runtime", "action", "action", "loader", "meta", "import_node", "import_react", "import_lucide_react", "React", "import_lucide_react", "import_jsx_dev_runtime", "React", "import_jsx_dev_runtime", "Separator", "import_class_variance_authority", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "meta", "loader", "action", "InputItem", "Separator", "action", "links", "loader", "meta", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "meta", "links", "loader", "action", "Content", "links", "meta", "import_react", "import_lucide_react", "import_jsx_dev_runtime", "meta", "links", "links", "import_react", "import_react", "import_lucide_react", "CollapsibleTrigger", "CollapsibleContent", "import_jsx_dev_runtime", "CollapsibleTrigger", "CollapsibleContent", "import_jsx_dev_runtime", "links"]
}
